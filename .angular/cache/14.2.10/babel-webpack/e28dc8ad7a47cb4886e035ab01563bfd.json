{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"StompJs\", [], factory);else if (typeof exports === 'object') exports[\"StompJs\"] = factory();else root[\"StompJs\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 0);\n      /******/\n    }\n    /************************************************************************/\n\n    /******/\n    ({\n      /***/\n      \"./src/byte.ts\":\n      /*!*********************!*\\\n        !*** ./src/byte.ts ***!\n        \\*********************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Some byte values, used as per STOMP specifications.\n         *\n         * Part of `@stomp/stompjs`.\n         *\n         * @internal\n         */\n\n        exports.BYTE = {\n          // LINEFEED byte (octet 10)\n          LF: '\\x0A',\n          // NULL byte (octet 0)\n          NULL: '\\x00'\n        };\n        /***/\n      },\n\n      /***/\n      \"./src/client.ts\":\n      /*!***********************!*\\\n        !*** ./src/client.ts ***!\n        \\***********************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n          function adopt(value) {\n            return value instanceof P ? value : new P(function (resolve) {\n              resolve(value);\n            });\n          }\n\n          return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n              try {\n                step(generator.next(value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n\n            function rejected(value) {\n              try {\n                step(generator[\"throw\"](value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n\n            function step(result) {\n              result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n          });\n        };\n\n        var __generator = this && this.__generator || function (thisArg, body) {\n          var _ = {\n            label: 0,\n            sent: function () {\n              if (t[0] & 1) throw t[1];\n              return t[1];\n            },\n            trys: [],\n            ops: []\n          },\n              f,\n              y,\n              t,\n              g;\n          return g = {\n            next: verb(0),\n            \"throw\": verb(1),\n            \"return\": verb(2)\n          }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n            return this;\n          }), g;\n\n          function verb(n) {\n            return function (v) {\n              return step([n, v]);\n            };\n          }\n\n          function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n\n            while (_) try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n              if (y = 0, t) op = [op[0] & 2, t.value];\n\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n\n                case 4:\n                  _.label++;\n                  return {\n                    value: op[1],\n                    done: false\n                  };\n\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n\n                case 7:\n                  op = _.ops.pop();\n\n                  _.trys.pop();\n\n                  continue;\n\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n\n                    _.ops.push(op);\n\n                    break;\n                  }\n\n                  if (t[2]) _.ops.pop();\n\n                  _.trys.pop();\n\n                  continue;\n              }\n\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n\n            if (op[0] & 5) throw op[1];\n            return {\n              value: op[0] ? op[1] : void 0,\n              done: true\n            };\n          }\n        };\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n\n        var stomp_handler_1 = __webpack_require__(\n        /*! ./stomp-handler */\n        \"./src/stomp-handler.ts\");\n\n        var versions_1 = __webpack_require__(\n        /*! ./versions */\n        \"./src/versions.ts\");\n\n        var web_socket_state_1 = __webpack_require__(\n        /*! ./web-socket-state */\n        \"./src/web-socket-state.ts\");\n        /**\n         * STOMP Client Class.\n         *\n         * Part of `@stomp/stompjs`.\n         */\n\n\n        var Client =\n        /** @class */\n        function () {\n          /**\n           * Create an instance.\n           */\n          function Client(conf) {\n            if (conf === void 0) {\n              conf = {};\n            }\n            /**\n             * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n             *\n             * Example:\n             * ```javascript\n             *        // Try only versions 1.0 and 1.1\n             *        client.stompVersions = new Versions(['1.0', '1.1'])\n             * ```\n             */\n\n\n            this.stompVersions = versions_1.Versions.default;\n            /**\n             *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n             */\n\n            this.reconnectDelay = 5000;\n            /**\n             * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n             */\n\n            this.heartbeatIncoming = 10000;\n            /**\n             * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n             */\n\n            this.heartbeatOutgoing = 10000;\n            /**\n             * This switches on a non standard behavior while sending WebSocket packets.\n             * It splits larger (text) packets into chunks of [maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n             * Only Java Spring brokers seems to use this mode.\n             *\n             * WebSockets, by itself, split large (text) packets,\n             * so it is not needed with a truly compliant STOMP/WebSocket broker.\n             * Actually setting it for such broker will cause large messages to fail.\n             *\n             * `false` by default.\n             *\n             * Binary frames are never split.\n             */\n\n            this.splitLargeFrames = false;\n            /**\n             * See [splitLargeFrames]{@link Client#splitLargeFrames}.\n             * This has no effect if [splitLargeFrames]{@link Client#splitLargeFrames} is `false`.\n             */\n\n            this.maxWebSocketChunkSize = 8 * 1024;\n            /**\n             * Usually the\n             * [type of WebSocket frame]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send#Parameters}\n             * is automatically decided by type of the payload.\n             * Default is `false`, which should work with all compliant brokers.\n             *\n             * Set this flag to force binary frames.\n             */\n\n            this.forceBinaryWSFrames = false;\n            /**\n             * A bug in ReactNative chops a string on occurrence of a NULL.\n             * See issue [https://github.com/stomp-js/stompjs/issues/89]{@link https://github.com/stomp-js/stompjs/issues/89}.\n             * This makes incoming WebSocket messages invalid STOMP packets.\n             * Setting this flag attempts to reverse the damage by appending a NULL.\n             * If the broker splits a large message into multiple WebSocket messages,\n             * this flag will cause data loss and abnormal termination of connection.\n             *\n             * This is not an ideal solution, but a stop gap until the underlying issue is fixed at ReactNative library.\n             */\n\n            this.appendMissingNULLonIncoming = false;\n            this._active = false; // Dummy callbacks\n\n            var noOp = function () {};\n\n            this.debug = noOp;\n            this.beforeConnect = noOp;\n            this.onConnect = noOp;\n            this.onDisconnect = noOp;\n            this.onUnhandledMessage = noOp;\n            this.onUnhandledReceipt = noOp;\n            this.onUnhandledFrame = noOp;\n            this.onStompError = noOp;\n            this.onWebSocketClose = noOp;\n            this.onWebSocketError = noOp;\n            this.logRawCommunication = false; // These parameters would typically get proper values before connect is called\n\n            this.connectHeaders = {};\n            this._disconnectHeaders = {}; // Apply configuration\n\n            this.configure(conf);\n          }\n\n          Object.defineProperty(Client.prototype, \"webSocket\", {\n            /**\n             * Underlying WebSocket instance, READONLY.\n             */\n            get: function () {\n              return this._webSocket;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(Client.prototype, \"disconnectHeaders\", {\n            /**\n             * Disconnection headers.\n             */\n            get: function () {\n              return this._disconnectHeaders;\n            },\n            set: function (value) {\n              this._disconnectHeaders = value;\n\n              if (this._stompHandler) {\n                this._stompHandler.disconnectHeaders = this._disconnectHeaders;\n              }\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(Client.prototype, \"connected\", {\n            /**\n             * `true` if there is a active connection with STOMP Broker\n             */\n            get: function () {\n              return !!this._stompHandler && this._stompHandler.connected;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(Client.prototype, \"connectedVersion\", {\n            /**\n             * version of STOMP protocol negotiated with the server, READONLY\n             */\n            get: function () {\n              return this._stompHandler ? this._stompHandler.connectedVersion : undefined;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(Client.prototype, \"active\", {\n            /**\n             * if the client is active (connected or going to reconnect)\n             */\n            get: function () {\n              return this._active;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          /**\n           * Update configuration.\n           */\n\n          Client.prototype.configure = function (conf) {\n            // bulk assign all properties to this\n            Object.assign(this, conf);\n          };\n          /**\n           * Initiate the connection with the broker.\n           * If the connection breaks, as per [Client#reconnectDelay]{@link Client#reconnectDelay},\n           * it will keep trying to reconnect.\n           *\n           * Call [Client#deactivate]{@link Client#deactivate} to disconnect and stop reconnection attempts.\n           */\n\n\n          Client.prototype.activate = function () {\n            this._active = true;\n\n            this._connect();\n          };\n\n          Client.prototype._connect = function () {\n            return __awaiter(this, void 0, void 0, function () {\n              var _this = this;\n\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (this.connected) {\n                      this.debug('STOMP: already connected, nothing to do');\n                      return [2\n                      /*return*/\n                      ];\n                    }\n\n                    return [4\n                    /*yield*/\n                    , this.beforeConnect()];\n\n                  case 1:\n                    _a.sent();\n\n                    if (!this._active) {\n                      this.debug('Client has been marked inactive, will not attempt to connect');\n                      return [2\n                      /*return*/\n                      ];\n                    }\n\n                    this.debug('Opening Web Socket...'); // Get the actual WebSocket (or a similar object)\n\n                    this._webSocket = this._createWebSocket();\n                    this._stompHandler = new stomp_handler_1.StompHandler(this, this._webSocket, {\n                      debug: this.debug,\n                      stompVersions: this.stompVersions,\n                      connectHeaders: this.connectHeaders,\n                      disconnectHeaders: this._disconnectHeaders,\n                      heartbeatIncoming: this.heartbeatIncoming,\n                      heartbeatOutgoing: this.heartbeatOutgoing,\n                      splitLargeFrames: this.splitLargeFrames,\n                      maxWebSocketChunkSize: this.maxWebSocketChunkSize,\n                      forceBinaryWSFrames: this.forceBinaryWSFrames,\n                      logRawCommunication: this.logRawCommunication,\n                      appendMissingNULLonIncoming: this.appendMissingNULLonIncoming,\n                      onConnect: function (frame) {\n                        if (!_this._active) {\n                          _this.debug('STOMP got connected while deactivate was issued, will disconnect now');\n\n                          _this._disposeStompHandler();\n\n                          return;\n                        }\n\n                        _this.onConnect(frame);\n                      },\n                      onDisconnect: function (frame) {\n                        _this.onDisconnect(frame);\n                      },\n                      onStompError: function (frame) {\n                        _this.onStompError(frame);\n                      },\n                      onWebSocketClose: function (evt) {\n                        _this.onWebSocketClose(evt); // The callback is called before attempting to reconnect, this would allow the client\n                        // to be `deactivated` in the callback.\n\n\n                        if (_this._active) {\n                          _this._schedule_reconnect();\n                        }\n                      },\n                      onWebSocketError: function (evt) {\n                        _this.onWebSocketError(evt);\n                      },\n                      onUnhandledMessage: function (message) {\n                        _this.onUnhandledMessage(message);\n                      },\n                      onUnhandledReceipt: function (frame) {\n                        _this.onUnhandledReceipt(frame);\n                      },\n                      onUnhandledFrame: function (frame) {\n                        _this.onUnhandledFrame(frame);\n                      }\n                    });\n\n                    this._stompHandler.start();\n\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          };\n\n          Client.prototype._createWebSocket = function () {\n            var webSocket;\n\n            if (this.webSocketFactory) {\n              webSocket = this.webSocketFactory();\n            } else {\n              webSocket = new WebSocket(this.brokerURL, this.stompVersions.protocolVersions());\n            }\n\n            webSocket.binaryType = 'arraybuffer';\n            return webSocket;\n          };\n\n          Client.prototype._schedule_reconnect = function () {\n            var _this = this;\n\n            if (this.reconnectDelay > 0) {\n              this.debug(\"STOMP: scheduling reconnection in \" + this.reconnectDelay + \"ms\");\n              this._reconnector = setTimeout(function () {\n                _this._connect();\n              }, this.reconnectDelay);\n            }\n          };\n          /**\n           * Disconnect if connected and stop auto reconnect loop.\n           * Appropriate callbacks will be invoked if underlying STOMP connection was connected.\n           *\n           * To reactivate you can call [Client#activate]{@link Client#activate}.\n           */\n\n\n          Client.prototype.deactivate = function () {\n            // indicate that auto reconnect loop should terminate\n            this._active = false; // Clear if a reconnection was scheduled\n\n            if (this._reconnector) {\n              clearTimeout(this._reconnector);\n            }\n\n            this._disposeStompHandler();\n          };\n          /**\n           * Force disconnect if there is an active connection by directly closing the underlying WebSocket.\n           * This is different than a normal disconnect where a DISCONNECT sequence is carried out with the broker.\n           * After forcing disconnect, automatic reconnect will be attempted.\n           * To stop further reconnects call [Client#deactivate]{@link Client#deactivate} as well.\n           */\n\n\n          Client.prototype.forceDisconnect = function () {\n            if (this._webSocket) {\n              if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._stompHandler._closeWebsocket();\n              }\n            }\n          };\n\n          Client.prototype._disposeStompHandler = function () {\n            // Dispose STOMP Handler\n            if (this._stompHandler) {\n              this._stompHandler.dispose();\n\n              this._stompHandler = null;\n            }\n          };\n          /**\n           * Send a message to a named destination. Refer to your STOMP broker documentation for types\n           * and naming of destinations.\n           *\n           * STOMP protocol specifies and suggests some headers and also allows broker specific headers.\n           *\n           * `body` must be String.\n           * You will need to covert the payload to string in case it is not string (e.g. JSON).\n           *\n           * To send a binary message body use binaryBody parameter. It should be a\n           * [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n           * Sometimes brokers may not support binary frames out of the box.\n           * Please check your broker documentation.\n           *\n           * `content-length` header is automatically added to the STOMP Frame sent to the broker.\n           * Set `skipContentLengthHeader` to indicate that `content-length` header should not be added.\n           * For binary messages `content-length` header is always added.\n           *\n           * Caution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\n           * and `content-length` header is missing.\n           *\n           * ```javascript\n           *        client.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n           *\n           *        // Only destination is mandatory parameter\n           *        client.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n           *\n           *        // Skip content-length header in the frame to the broker\n           *        client.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n           *\n           *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n           *        // setting content-type header is not mandatory, however a good practice\n           *        client.publish({destination: '/topic/special', binaryBody: binaryData,\n           *                         headers: {'content-type': 'application/octet-stream'}});\n           * ```\n           */\n\n\n          Client.prototype.publish = function (params) {\n            this._stompHandler.publish(params);\n          };\n          /**\n           * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n           * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n           * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n           * random number or a combination may be used.\n           *\n           * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n           * The operation needs to be matched based in the value of the receipt-id.\n           *\n           * This method allow watching for a receipt and invoke the callback\n           * when corresponding receipt has been received.\n           *\n           * The actual {@link FrameImpl} will be passed as parameter to the callback.\n           *\n           * Example:\n           * ```javascript\n           *        // Subscribing with acknowledgement\n           *        let receiptId = randomText();\n           *\n           *        client.watchForReceipt(receiptId, function() {\n           *          // Will be called after server acknowledges\n           *        });\n           *\n           *        client.subscribe(TEST.destination, onMessage, {receipt: receiptId});\n           *\n           *\n           *        // Publishing with acknowledgement\n           *        receiptId = randomText();\n           *\n           *        client.watchForReceipt(receiptId, function() {\n           *          // Will be called after server acknowledges\n           *        });\n           *        client.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n           * ```\n           */\n\n\n          Client.prototype.watchForReceipt = function (receiptId, callback) {\n            this._stompHandler.watchForReceipt(receiptId, callback);\n          };\n          /**\n           * Subscribe to a STOMP Broker location. The callback will be invoked for each received message with\n           * the {@link IMessage} as argument.\n           *\n           * Note: The library will generate an unique ID if there is none provided in the headers.\n           *       To use your own ID, pass it using the headers argument.\n           *\n           * ```javascript\n           *        callback = function(message) {\n           *        // called when the client receives a STOMP message from the server\n           *          if (message.body) {\n           *            alert(\"got message with body \" + message.body)\n           *          } else {\n           *            alert(\"got empty message\");\n           *          }\n           *        });\n           *\n           *        var subscription = client.subscribe(\"/queue/test\", callback);\n           *\n           *        // Explicit subscription id\n           *        var mySubId = 'my-subscription-id-001';\n           *        var subscription = client.subscribe(destination, callback, { id: mySubId });\n           * ```\n           */\n\n\n          Client.prototype.subscribe = function (destination, callback, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n\n            return this._stompHandler.subscribe(destination, callback, headers);\n          };\n          /**\n           * It is preferable to unsubscribe from a subscription by calling\n           * `unsubscribe()` directly on {@link StompSubscription} returned by `client.subscribe()`:\n           *\n           * ```javascript\n           *        var subscription = client.subscribe(destination, onmessage);\n           *        // ...\n           *        subscription.unsubscribe();\n           * ```\n           *\n           * See: http://stomp.github.com/stomp-specification-1.2.html#UNSUBSCRIBE UNSUBSCRIBE Frame\n           */\n\n\n          Client.prototype.unsubscribe = function (id, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n\n            this._stompHandler.unsubscribe(id, headers);\n          };\n          /**\n           * Start a transaction, the returned {@link ITransaction} has methods - [commit]{@link ITransaction#commit}\n           * and [abort]{@link ITransaction#abort}.\n           *\n           * `transactionId` is optional, if not passed the library will generate it internally.\n           */\n\n\n          Client.prototype.begin = function (transactionId) {\n            return this._stompHandler.begin(transactionId);\n          };\n          /**\n           * Commit a transaction.\n           *\n           * It is preferable to commit a transaction by calling [commit]{@link ITransaction#commit} directly on\n           * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n           *\n           * ```javascript\n           *        var tx = client.begin(txId);\n           *        //...\n           *        tx.commit();\n           * ```\n           */\n\n\n          Client.prototype.commit = function (transactionId) {\n            this._stompHandler.commit(transactionId);\n          };\n          /**\n           * Abort a transaction.\n           * It is preferable to abort a transaction by calling [abort]{@link ITransaction#abort} directly on\n           * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n           *\n           * ```javascript\n           *        var tx = client.begin(txId);\n           *        //...\n           *        tx.abort();\n           * ```\n           */\n\n\n          Client.prototype.abort = function (transactionId) {\n            this._stompHandler.abort(transactionId);\n          };\n          /**\n           * ACK a message. It is preferable to acknowledge a message by calling [ack]{@link IMessage#ack} directly\n           * on the {@link IMessage} handled by a subscription callback:\n           *\n           * ```javascript\n           *        var callback = function (message) {\n           *          // process the message\n           *          // acknowledge it\n           *          message.ack();\n           *        };\n           *        client.subscribe(destination, callback, {'ack': 'client'});\n           * ```\n           */\n\n\n          Client.prototype.ack = function (messageId, subscriptionId, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n\n            this._stompHandler.ack(messageId, subscriptionId, headers);\n          };\n          /**\n           * NACK a message. It is preferable to acknowledge a message by calling [nack]{@link IMessage#nack} directly\n           * on the {@link IMessage} handled by a subscription callback:\n           *\n           * ```javascript\n           *        var callback = function (message) {\n           *          // process the message\n           *          // an error occurs, nack it\n           *          message.nack();\n           *        };\n           *        client.subscribe(destination, callback, {'ack': 'client'});\n           * ```\n           */\n\n\n          Client.prototype.nack = function (messageId, subscriptionId, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n\n            this._stompHandler.nack(messageId, subscriptionId, headers);\n          };\n\n          return Client;\n        }();\n\n        exports.Client = Client;\n        /***/\n      },\n\n      /***/\n      \"./src/compatibility/compat-client.ts\":\n      /*!********************************************!*\\\n        !*** ./src/compatibility/compat-client.ts ***!\n        \\********************************************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        var __extends = this && this.__extends || function () {\n          var extendStatics = function (d, b) {\n            extendStatics = Object.setPrototypeOf || {\n              __proto__: []\n            } instanceof Array && function (d, b) {\n              d.__proto__ = b;\n            } || function (d, b) {\n              for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            };\n\n            return extendStatics(d, b);\n          };\n\n          return function (d, b) {\n            extendStatics(d, b);\n\n            function __() {\n              this.constructor = d;\n            }\n\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n          };\n        }();\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n\n        var client_1 = __webpack_require__(\n        /*! ../client */\n        \"./src/client.ts\");\n\n        var heartbeat_info_1 = __webpack_require__(\n        /*! ./heartbeat-info */\n        \"./src/compatibility/heartbeat-info.ts\");\n        /**\n         * Available for backward compatibility, please shift to using {@link Client}.\n         *\n         * **Deprecated**\n         *\n         * Part of `@stomp/stompjs`.\n         *\n         * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n         */\n\n\n        var CompatClient =\n        /** @class */\n        function (_super) {\n          __extends(CompatClient, _super);\n          /**\n           * Available for backward compatibility, please shift to using {@link Client}\n           * and [Client#webSocketFactory]{@link Client#webSocketFactory}.\n           *\n           * **Deprecated**\n           *\n           * @internal\n           */\n\n\n          function CompatClient(webSocketFactory) {\n            var _this = _super.call(this) || this;\n            /**\n             * It is no op now. No longer needed. Large packets work out of the box.\n             */\n\n\n            _this.maxWebSocketFrameSize = 16 * 1024;\n            _this._heartbeatInfo = new heartbeat_info_1.HeartbeatInfo(_this);\n            _this.reconnect_delay = 0;\n            _this.webSocketFactory = webSocketFactory; // Default from previous version\n\n            _this.debug = function () {\n              var message = [];\n\n              for (var _i = 0; _i < arguments.length; _i++) {\n                message[_i] = arguments[_i];\n              }\n\n              console.log.apply(console, message);\n            };\n\n            return _this;\n          }\n\n          CompatClient.prototype._parseConnect = function () {\n            var args = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n\n            var closeEventCallback;\n            var connectCallback;\n            var errorCallback;\n            var headers = {};\n\n            if (args.length < 2) {\n              throw new Error('Connect requires at least 2 arguments');\n            }\n\n            if (typeof args[1] === 'function') {\n              headers = args[0], connectCallback = args[1], errorCallback = args[2], closeEventCallback = args[3];\n            } else {\n              switch (args.length) {\n                case 6:\n                  headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4], headers.host = args[5];\n                  break;\n\n                default:\n                  headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4];\n              }\n            }\n\n            return [headers, connectCallback, errorCallback, closeEventCallback];\n          };\n          /**\n           * Available for backward compatibility, please shift to using [Client#activate]{@link Client#activate}.\n           *\n           * **Deprecated**\n           *\n           * The `connect` method accepts different number of arguments and types. See the Overloads list. Use the\n           * version with headers to pass your broker specific options.\n           *\n           * overloads:\n           * - connect(headers, connectCallback)\n           * - connect(headers, connectCallback, errorCallback)\n           * - connect(login, passcode, connectCallback)\n           * - connect(login, passcode, connectCallback, errorCallback)\n           * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback)\n           * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback, host)\n           *\n           * params:\n           * - headers, see [Client#connectHeaders]{@link Client#connectHeaders}\n           * - connectCallback, see [Client#onConnect]{@link Client#onConnect}\n           * - errorCallback, see [Client#onStompError]{@link Client#onStompError}\n           * - closeEventCallback, see [Client#onWebSocketClose]{@link Client#onWebSocketClose}\n           * - login [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n           * - passcode [String], [Client#connectHeaders](../classes/Client.html#connectHeaders)\n           * - host [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n           *\n           * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n           */\n\n\n          CompatClient.prototype.connect = function () {\n            var args = [];\n\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n\n            var out = this._parseConnect.apply(this, args);\n\n            if (out[0]) {\n              this.connectHeaders = out[0];\n            }\n\n            if (out[1]) {\n              this.onConnect = out[1];\n            }\n\n            if (out[2]) {\n              this.onStompError = out[2];\n            }\n\n            if (out[3]) {\n              this.onWebSocketClose = out[3];\n            }\n\n            _super.prototype.activate.call(this);\n          };\n          /**\n           * Available for backward compatibility, please shift to using [Client#deactivate]{@link Client#deactivate}.\n           *\n           * **Deprecated**\n           *\n           * See:\n           * [Client#onDisconnect]{@link Client#onDisconnect}, and\n           * [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n           *\n           * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n           */\n\n\n          CompatClient.prototype.disconnect = function (disconnectCallback, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n\n            if (disconnectCallback) {\n              this.onDisconnect = disconnectCallback;\n            }\n\n            this.disconnectHeaders = headers;\n\n            _super.prototype.deactivate.call(this);\n          };\n          /**\n           * Available for backward compatibility, use [Client#publish]{@link Client#publish}.\n           *\n           * Send a message to a named destination. Refer to your STOMP broker documentation for types\n           * and naming of destinations. The headers will, typically, be available to the subscriber.\n           * However, there may be special purpose headers corresponding to your STOMP broker.\n           *\n           *  **Deprecated**, use [Client#publish]{@link Client#publish}\n           *\n           * Note: Body must be String. You will need to covert the payload to string in case it is not string (e.g. JSON)\n           *\n           * ```javascript\n           *        client.send(\"/queue/test\", {priority: 9}, \"Hello, STOMP\");\n           *\n           *        // If you want to send a message with a body, you must also pass the headers argument.\n           *        client.send(\"/queue/test\", {}, \"Hello, STOMP\");\n           * ```\n           *\n           * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n           */\n\n\n          CompatClient.prototype.send = function (destination, headers, body) {\n            if (headers === void 0) {\n              headers = {};\n            }\n\n            if (body === void 0) {\n              body = '';\n            }\n\n            headers = Object.assign({}, headers);\n            var skipContentLengthHeader = headers['content-length'] === false;\n\n            if (skipContentLengthHeader) {\n              delete headers['content-length'];\n            }\n\n            this.publish({\n              destination: destination,\n              headers: headers,\n              body: body,\n              skipContentLengthHeader: skipContentLengthHeader\n            });\n          };\n\n          Object.defineProperty(CompatClient.prototype, \"reconnect_delay\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#reconnectDelay]{@link Client#reconnectDelay}.\n             *\n             * **Deprecated**\n             */\n            set: function (value) {\n              this.reconnectDelay = value;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(CompatClient.prototype, \"ws\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#webSocket]{@link Client#webSocket}.\n             *\n             * **Deprecated**\n             */\n            get: function () {\n              return this._webSocket;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(CompatClient.prototype, \"version\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#connectedVersion]{@link Client#connectedVersion}.\n             *\n             * **Deprecated**\n             */\n            get: function () {\n              return this.connectedVersion;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(CompatClient.prototype, \"onreceive\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n             *\n             * **Deprecated**\n             */\n            get: function () {\n              return this.onUnhandledMessage;\n            },\n\n            /**\n             * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n             *\n             * **Deprecated**\n             */\n            set: function (value) {\n              this.onUnhandledMessage = value;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(CompatClient.prototype, \"onreceipt\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n             * Prefer using [Client#watchForReceipt]{@link Client#watchForReceipt}.\n             *\n             * **Deprecated**\n             */\n            get: function () {\n              return this.onUnhandledReceipt;\n            },\n\n            /**\n             * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n             *\n             * **Deprecated**\n             */\n            set: function (value) {\n              this.onUnhandledReceipt = value;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(CompatClient.prototype, \"heartbeat\", {\n            /**\n             * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n             * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n             *\n             * **Deprecated**\n             */\n            get: function () {\n              return this._heartbeatInfo;\n            },\n\n            /**\n             * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n             * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n             *\n             * **Deprecated**\n             */\n            set: function (value) {\n              this.heartbeatIncoming = value.incoming;\n              this.heartbeatOutgoing = value.outgoing;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          return CompatClient;\n        }(client_1.Client);\n\n        exports.CompatClient = CompatClient;\n        /***/\n      },\n\n      /***/\n      \"./src/compatibility/heartbeat-info.ts\":\n      /*!*********************************************!*\\\n        !*** ./src/compatibility/heartbeat-info.ts ***!\n        \\*********************************************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Part of `@stomp/stompjs`.\n         *\n         * @internal\n         */\n\n        var HeartbeatInfo =\n        /** @class */\n        function () {\n          function HeartbeatInfo(client) {\n            this.client = client;\n          }\n\n          Object.defineProperty(HeartbeatInfo.prototype, \"outgoing\", {\n            get: function () {\n              return this.client.heartbeatOutgoing;\n            },\n            set: function (value) {\n              this.client.heartbeatOutgoing = value;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(HeartbeatInfo.prototype, \"incoming\", {\n            get: function () {\n              return this.client.heartbeatIncoming;\n            },\n            set: function (value) {\n              this.client.heartbeatIncoming = value;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          return HeartbeatInfo;\n        }();\n\n        exports.HeartbeatInfo = HeartbeatInfo;\n        /***/\n      },\n\n      /***/\n      \"./src/compatibility/stomp.ts\":\n      /*!************************************!*\\\n        !*** ./src/compatibility/stomp.ts ***!\n        \\************************************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n\n        var versions_1 = __webpack_require__(\n        /*! ../versions */\n        \"./src/versions.ts\");\n\n        var compat_client_1 = __webpack_require__(\n        /*! ./compat-client */\n        \"./src/compatibility/compat-client.ts\");\n        /**\n         * STOMP Class, acts like a factory to create {@link Client}.\n         *\n         * Part of `@stomp/stompjs`.\n         *\n         * **Deprecated**\n         *\n         * It will be removed in next major version. Please switch to {@link Client}.\n         */\n\n\n        var Stomp =\n        /** @class */\n        function () {\n          function Stomp() {}\n          /**\n           * This method creates a WebSocket client that is connected to\n           * the STOMP server located at the url.\n           *\n           * ```javascript\n           *        var url = \"ws://localhost:61614/stomp\";\n           *        var client = Stomp.client(url);\n           * ```\n           *\n           * **Deprecated**\n           *\n           * It will be removed in next major version. Please switch to {@link Client}\n           * using [Client#brokerURL]{@link Client#brokerURL}.\n           */\n\n\n          Stomp.client = function (url, protocols) {\n            // This is a hack to allow another implementation than the standard\n            // HTML5 WebSocket class.\n            //\n            // It is possible to use another class by calling\n            //\n            //     Stomp.WebSocketClass = MozWebSocket\n            //\n            // *prior* to call `Stomp.client()`.\n            //\n            // This hack is deprecated and `Stomp.over()` method should be used\n            // instead.\n            // See remarks on the function Stomp.over\n            if (protocols == null) {\n              protocols = versions_1.Versions.default.protocolVersions();\n            }\n\n            var wsFn = function () {\n              var klass = Stomp.WebSocketClass || WebSocket;\n              return new klass(url, protocols);\n            };\n\n            return new compat_client_1.CompatClient(wsFn);\n          };\n          /**\n           * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n           * specify the WebSocket to use (either a standard HTML5 WebSocket or\n           * a similar object).\n           *\n           * In order to support reconnection, the function Client._connect should be callable more than once.\n           * While reconnecting\n           * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n           * alternatively allows passing a function that should return a new instance of the underlying socket.\n           *\n           * ```javascript\n           *        var client = Stomp.over(function(){\n           *          return new WebSocket('ws://localhost:15674/ws')\n           *        });\n           * ```\n           *\n           * **Deprecated**\n           *\n           * It will be removed in next major version. Please switch to {@link Client}\n           * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n           */\n\n\n          Stomp.over = function (ws) {\n            var wsFn;\n\n            if (typeof ws === 'function') {\n              wsFn = ws;\n            } else {\n              console.warn('Stomp.over did not receive a factory, auto reconnect will not work. ' + 'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over');\n\n              wsFn = function () {\n                return ws;\n              };\n            }\n\n            return new compat_client_1.CompatClient(wsFn);\n          };\n          /**\n           * In case you need to use a non standard class for WebSocket.\n           *\n           * For example when using within NodeJS environment:\n           *\n           * ```javascript\n           *        StompJs = require('../../esm5/');\n           *        Stomp = StompJs.Stomp;\n           *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n           * ```\n           *\n           * **Deprecated**\n           *\n           *\n           * It will be removed in next major version. Please switch to {@link Client}\n           * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n           */\n          // tslint:disable-next-line:variable-name\n\n\n          Stomp.WebSocketClass = null;\n          return Stomp;\n        }();\n\n        exports.Stomp = Stomp;\n        /***/\n      },\n\n      /***/\n      \"./src/frame-impl.ts\":\n      /*!***************************!*\\\n        !*** ./src/frame-impl.ts ***!\n        \\***************************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n\n        var byte_1 = __webpack_require__(\n        /*! ./byte */\n        \"./src/byte.ts\");\n        /**\n         * Frame class represents a STOMP frame.\n         *\n         * @internal\n         */\n\n\n        var FrameImpl =\n        /** @class */\n        function () {\n          /**\n           * Frame constructor. `command`, `headers` and `body` are available as properties.\n           *\n           * @internal\n           */\n          function FrameImpl(params) {\n            var command = params.command,\n                headers = params.headers,\n                body = params.body,\n                binaryBody = params.binaryBody,\n                escapeHeaderValues = params.escapeHeaderValues,\n                skipContentLengthHeader = params.skipContentLengthHeader;\n            this.command = command;\n            this.headers = Object.assign({}, headers || {});\n\n            if (binaryBody) {\n              this._binaryBody = binaryBody;\n              this.isBinaryBody = true;\n            } else {\n              this._body = body || '';\n              this.isBinaryBody = false;\n            }\n\n            this.escapeHeaderValues = escapeHeaderValues || false;\n            this.skipContentLengthHeader = skipContentLengthHeader || false;\n          }\n\n          Object.defineProperty(FrameImpl.prototype, \"body\", {\n            /**\n             * body of the frame\n             */\n            get: function () {\n              if (!this._body && this.isBinaryBody) {\n                this._body = new TextDecoder().decode(this._binaryBody);\n              }\n\n              return this._body;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(FrameImpl.prototype, \"binaryBody\", {\n            /**\n             * body as Uint8Array\n             */\n            get: function () {\n              if (!this._binaryBody && !this.isBinaryBody) {\n                this._binaryBody = new TextEncoder().encode(this._body);\n              }\n\n              return this._binaryBody;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          /**\n           * deserialize a STOMP Frame from raw data.\n           *\n           * @internal\n           */\n\n          FrameImpl.fromRawFrame = function (rawFrame, escapeHeaderValues) {\n            var headers = {};\n\n            var trim = function (str) {\n              return str.replace(/^\\s+|\\s+$/g, '');\n            }; // In case of repeated headers, as per standards, first value need to be used\n\n\n            for (var _i = 0, _a = rawFrame.headers.reverse(); _i < _a.length; _i++) {\n              var header = _a[_i];\n              var idx = header.indexOf(':');\n              var key = trim(header[0]);\n              var value = trim(header[1]);\n\n              if (escapeHeaderValues && rawFrame.command !== 'CONNECT' && rawFrame.command !== 'CONNECTED') {\n                value = FrameImpl.hdrValueUnEscape(value);\n              }\n\n              headers[key] = value;\n            }\n\n            return new FrameImpl({\n              command: rawFrame.command,\n              headers: headers,\n              binaryBody: rawFrame.binaryBody,\n              escapeHeaderValues: escapeHeaderValues\n            });\n          };\n          /**\n           * @internal\n           */\n\n\n          FrameImpl.prototype.toString = function () {\n            return this.serializeCmdAndHeaders();\n          };\n          /**\n           * serialize this Frame in a format suitable to be passed to WebSocket.\n           * If the body is string the output will be string.\n           * If the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n           *\n           * @internal\n           */\n\n\n          FrameImpl.prototype.serialize = function () {\n            var cmdAndHeaders = this.serializeCmdAndHeaders();\n\n            if (this.isBinaryBody) {\n              return FrameImpl.toUnit8Array(cmdAndHeaders, this._binaryBody).buffer;\n            } else {\n              return cmdAndHeaders + this._body + byte_1.BYTE.NULL;\n            }\n          };\n\n          FrameImpl.prototype.serializeCmdAndHeaders = function () {\n            var lines = [this.command];\n\n            if (this.skipContentLengthHeader) {\n              delete this.headers['content-length'];\n            }\n\n            for (var _i = 0, _a = Object.keys(this.headers || {}); _i < _a.length; _i++) {\n              var name_1 = _a[_i];\n              var value = this.headers[name_1];\n\n              if (this.escapeHeaderValues && this.command !== 'CONNECT' && this.command !== 'CONNECTED') {\n                lines.push(name_1 + \":\" + FrameImpl.hdrValueEscape(\"\" + value));\n              } else {\n                lines.push(name_1 + \":\" + value);\n              }\n            }\n\n            if (this.isBinaryBody || !this.isBodyEmpty() && !this.skipContentLengthHeader) {\n              lines.push(\"content-length:\" + this.bodyLength());\n            }\n\n            return lines.join(byte_1.BYTE.LF) + byte_1.BYTE.LF + byte_1.BYTE.LF;\n          };\n\n          FrameImpl.prototype.isBodyEmpty = function () {\n            return this.bodyLength() === 0;\n          };\n\n          FrameImpl.prototype.bodyLength = function () {\n            var binaryBody = this.binaryBody;\n            return binaryBody ? binaryBody.length : 0;\n          };\n          /**\n           * Compute the size of a UTF-8 string by counting its number of bytes\n           * (and not the number of characters composing the string)\n           */\n\n\n          FrameImpl.sizeOfUTF8 = function (s) {\n            return s ? new TextEncoder().encode(s).length : 0;\n          };\n\n          FrameImpl.toUnit8Array = function (cmdAndHeaders, binaryBody) {\n            var uint8CmdAndHeaders = new TextEncoder().encode(cmdAndHeaders);\n            var nullTerminator = new Uint8Array([0]);\n            var uint8Frame = new Uint8Array(uint8CmdAndHeaders.length + binaryBody.length + nullTerminator.length);\n            uint8Frame.set(uint8CmdAndHeaders);\n            uint8Frame.set(binaryBody, uint8CmdAndHeaders.length);\n            uint8Frame.set(nullTerminator, uint8CmdAndHeaders.length + binaryBody.length);\n            return uint8Frame;\n          };\n          /**\n           * Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n           *\n           * @internal\n           */\n\n\n          FrameImpl.marshall = function (params) {\n            var frame = new FrameImpl(params);\n            return frame.serialize();\n          };\n          /**\n           *  Escape header values\n           */\n\n\n          FrameImpl.hdrValueEscape = function (str) {\n            return str.replace(/\\\\/g, '\\\\\\\\').replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/:/g, '\\\\c');\n          };\n          /**\n           * UnEscape header values\n           */\n\n\n          FrameImpl.hdrValueUnEscape = function (str) {\n            return str.replace(/\\\\r/g, '\\r').replace(/\\\\n/g, '\\n').replace(/\\\\c/g, ':').replace(/\\\\\\\\/g, '\\\\');\n          };\n\n          return FrameImpl;\n        }();\n\n        exports.FrameImpl = FrameImpl;\n        /***/\n      },\n\n      /***/\n      \"./src/index.ts\":\n      /*!**********************!*\\\n        !*** ./src/index.ts ***!\n        \\**********************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        function __export(m) {\n          for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n\n        __export(__webpack_require__(\n        /*! ./client */\n        \"./src/client.ts\"));\n\n        __export(__webpack_require__(\n        /*! ./frame-impl */\n        \"./src/frame-impl.ts\"));\n\n        __export(__webpack_require__(\n        /*! ./parser */\n        \"./src/parser.ts\"));\n\n        __export(__webpack_require__(\n        /*! ./stomp-config */\n        \"./src/stomp-config.ts\"));\n\n        __export(__webpack_require__(\n        /*! ./stomp-headers */\n        \"./src/stomp-headers.ts\"));\n\n        __export(__webpack_require__(\n        /*! ./stomp-subscription */\n        \"./src/stomp-subscription.ts\"));\n\n        __export(__webpack_require__(\n        /*! ./versions */\n        \"./src/versions.ts\"));\n\n        __export(__webpack_require__(\n        /*! ./web-socket-state */\n        \"./src/web-socket-state.ts\")); // Compatibility code\n\n\n        __export(__webpack_require__(\n        /*! ./compatibility/compat-client */\n        \"./src/compatibility/compat-client.ts\"));\n\n        __export(__webpack_require__(\n        /*! ./compatibility/stomp */\n        \"./src/compatibility/stomp.ts\"));\n        /***/\n\n      },\n\n      /***/\n      \"./src/parser.ts\":\n      /*!***********************!*\\\n        !*** ./src/parser.ts ***!\n        \\***********************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * @internal\n         */\n\n        var NULL = 0;\n        /**\n         * @internal\n         */\n\n        var LF = 10;\n        /**\n         * @internal\n         */\n\n        var CR = 13;\n        /**\n         * @internal\n         */\n\n        var COLON = 58;\n        /**\n         * This is an evented, rec descent parser.\n         * A stream of Octets can be passed and whenever it recognizes\n         * a complete Frame or an incoming ping it will invoke the registered callbacks.\n         *\n         * All incoming Octets are fed into _onByte function.\n         * Depending on current state the _onByte function keeps changing.\n         * Depending on the state it keeps accumulating into _token and _results.\n         * State is indicated by current value of _onByte, all states are named as _collect.\n         *\n         * STOMP standards https://stomp.github.io/stomp-specification-1.2.html\n         * imply that all lengths are considered in bytes (instead of string lengths).\n         * So, before actual parsing, if the incoming data is String it is converted to Octets.\n         * This allows faithful implementation of the protocol and allows NULL Octets to be present in the body.\n         *\n         * There is no peek function on the incoming data.\n         * When a state change occurs based on an Octet without consuming the Octet,\n         * the Octet, after state change, is fed again (_reinjectByte).\n         * This became possible as the state change can be determined by inspecting just one Octet.\n         *\n         * There are two modes to collect the body, if content-length header is there then it by counting Octets\n         * otherwise it is determined by NULL terminator.\n         *\n         * Following the standards, the command and headers are converted to Strings\n         * and the body is returned as Octets.\n         * Headers are returned as an array and not as Hash - to allow multiple occurrence of an header.\n         *\n         * This parser does not use Regular Expressions as that can only operate on Strings.\n         *\n         * It handles if multiple STOMP frames are given as one chunk, a frame is split into multiple chunks, or\n         * any combination there of. The parser remembers its state (any partial frame) and continues when a new chunk\n         * is pushed.\n         *\n         * Typically the higher level function will convert headers to Hash, handle unescaping of header values\n         * (which is protocol version specific), and convert body to text.\n         *\n         * Check the parser.spec.js to understand cases that this parser is supposed to handle.\n         *\n         * Part of `@stomp/stompjs`.\n         *\n         * @internal\n         */\n\n        var Parser =\n        /** @class */\n        function () {\n          function Parser(onFrame, onIncomingPing) {\n            this.onFrame = onFrame;\n            this.onIncomingPing = onIncomingPing;\n            this._encoder = new TextEncoder();\n            this._decoder = new TextDecoder();\n            this._token = [];\n\n            this._initState();\n          }\n\n          Parser.prototype.parseChunk = function (segment, appendMissingNULLonIncoming) {\n            if (appendMissingNULLonIncoming === void 0) {\n              appendMissingNULLonIncoming = false;\n            }\n\n            var chunk;\n\n            if (segment instanceof ArrayBuffer) {\n              chunk = new Uint8Array(segment);\n            } else {\n              chunk = this._encoder.encode(segment);\n            } // See https://github.com/stomp-js/stompjs/issues/89\n            // Remove when underlying issue is fixed.\n            //\n            // Send a NULL byte, if the last byte of a Text frame was not NULL.F\n\n\n            if (appendMissingNULLonIncoming && chunk[chunk.length - 1] !== 0) {\n              var chunkWithNull = new Uint8Array(chunk.length + 1);\n              chunkWithNull.set(chunk, 0);\n              chunkWithNull[chunk.length] = 0;\n              chunk = chunkWithNull;\n            } // tslint:disable-next-line:prefer-for-of\n\n\n            for (var i = 0; i < chunk.length; i++) {\n              var byte = chunk[i];\n\n              this._onByte(byte);\n            }\n          }; // The following implements a simple Rec Descent Parser.\n          // The grammar is simple and just one byte tells what should be the next state\n\n\n          Parser.prototype._collectFrame = function (byte) {\n            if (byte === NULL) {\n              // Ignore\n              return;\n            }\n\n            if (byte === CR) {\n              // Ignore CR\n              return;\n            }\n\n            if (byte === LF) {\n              // Incoming Ping\n              this.onIncomingPing();\n              return;\n            }\n\n            this._onByte = this._collectCommand;\n\n            this._reinjectByte(byte);\n          };\n\n          Parser.prototype._collectCommand = function (byte) {\n            if (byte === CR) {\n              // Ignore CR\n              return;\n            }\n\n            if (byte === LF) {\n              this._results.command = this._consumeTokenAsUTF8();\n              this._onByte = this._collectHeaders;\n              return;\n            }\n\n            this._consumeByte(byte);\n          };\n\n          Parser.prototype._collectHeaders = function (byte) {\n            if (byte === CR) {\n              // Ignore CR\n              return;\n            }\n\n            if (byte === LF) {\n              this._setupCollectBody();\n\n              return;\n            }\n\n            this._onByte = this._collectHeaderKey;\n\n            this._reinjectByte(byte);\n          };\n\n          Parser.prototype._reinjectByte = function (byte) {\n            this._onByte(byte);\n          };\n\n          Parser.prototype._collectHeaderKey = function (byte) {\n            if (byte === COLON) {\n              this._headerKey = this._consumeTokenAsUTF8();\n              this._onByte = this._collectHeaderValue;\n              return;\n            }\n\n            this._consumeByte(byte);\n          };\n\n          Parser.prototype._collectHeaderValue = function (byte) {\n            if (byte === CR) {\n              // Ignore CR\n              return;\n            }\n\n            if (byte === LF) {\n              this._results.headers.push([this._headerKey, this._consumeTokenAsUTF8()]);\n\n              this._headerKey = undefined;\n              this._onByte = this._collectHeaders;\n              return;\n            }\n\n            this._consumeByte(byte);\n          };\n\n          Parser.prototype._setupCollectBody = function () {\n            var contentLengthHeader = this._results.headers.filter(function (header) {\n              return header[0] === 'content-length';\n            })[0];\n\n            if (contentLengthHeader) {\n              this._bodyBytesRemaining = parseInt(contentLengthHeader[1], 10);\n              this._onByte = this._collectBodyFixedSize;\n            } else {\n              this._onByte = this._collectBodyNullTerminated;\n            }\n          };\n\n          Parser.prototype._collectBodyNullTerminated = function (byte) {\n            if (byte === NULL) {\n              this._retrievedBody();\n\n              return;\n            }\n\n            this._consumeByte(byte);\n          };\n\n          Parser.prototype._collectBodyFixedSize = function (byte) {\n            // It is post decrement, so that we discard the trailing NULL octet\n            if (this._bodyBytesRemaining-- === 0) {\n              this._retrievedBody();\n\n              return;\n            }\n\n            this._consumeByte(byte);\n          };\n\n          Parser.prototype._retrievedBody = function () {\n            this._results.binaryBody = this._consumeTokenAsRaw();\n            this.onFrame(this._results);\n\n            this._initState();\n          }; // Rec Descent Parser helpers\n\n\n          Parser.prototype._consumeByte = function (byte) {\n            this._token.push(byte);\n          };\n\n          Parser.prototype._consumeTokenAsUTF8 = function () {\n            return this._decoder.decode(this._consumeTokenAsRaw());\n          };\n\n          Parser.prototype._consumeTokenAsRaw = function () {\n            var rawResult = new Uint8Array(this._token);\n            this._token = [];\n            return rawResult;\n          };\n\n          Parser.prototype._initState = function () {\n            this._results = {\n              command: undefined,\n              headers: [],\n              binaryBody: undefined\n            };\n            this._token = [];\n            this._headerKey = undefined;\n            this._onByte = this._collectFrame;\n          };\n\n          return Parser;\n        }();\n\n        exports.Parser = Parser;\n        /***/\n      },\n\n      /***/\n      \"./src/stomp-config.ts\":\n      /*!*****************************!*\\\n        !*** ./src/stomp-config.ts ***!\n        \\*****************************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Configuration options for STOMP Client, each key corresponds to\n         * field by the same name in {@link Client}. This can be passed to\n         * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n         *\n         * Part of `@stomp/stompjs`.\n         */\n\n        var StompConfig =\n        /** @class */\n        function () {\n          function StompConfig() {}\n\n          return StompConfig;\n        }();\n\n        exports.StompConfig = StompConfig;\n        /***/\n      },\n\n      /***/\n      \"./src/stomp-handler.ts\":\n      /*!******************************!*\\\n        !*** ./src/stomp-handler.ts ***!\n        \\******************************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n\n        var byte_1 = __webpack_require__(\n        /*! ./byte */\n        \"./src/byte.ts\");\n\n        var frame_impl_1 = __webpack_require__(\n        /*! ./frame-impl */\n        \"./src/frame-impl.ts\");\n\n        var parser_1 = __webpack_require__(\n        /*! ./parser */\n        \"./src/parser.ts\");\n\n        var versions_1 = __webpack_require__(\n        /*! ./versions */\n        \"./src/versions.ts\");\n\n        var web_socket_state_1 = __webpack_require__(\n        /*! ./web-socket-state */\n        \"./src/web-socket-state.ts\");\n        /**\n         * The STOMP protocol handler\n         *\n         * Part of `@stomp/stompjs`.\n         *\n         * @internal\n         */\n\n\n        var StompHandler =\n        /** @class */\n        function () {\n          function StompHandler(_client, _webSocket, config) {\n            var _this = this;\n\n            if (config === void 0) {\n              config = {};\n            }\n\n            this._client = _client;\n            this._webSocket = _webSocket;\n            this._serverFrameHandlers = {\n              // [CONNECTED Frame](http://stomp.github.com/stomp-specification-1.2.html#CONNECTED_Frame)\n              CONNECTED: function (frame) {\n                _this.debug(\"connected to server \" + frame.headers.server);\n\n                _this._connected = true;\n                _this._connectedVersion = frame.headers.version; // STOMP version 1.2 needs header values to be escaped\n\n                if (_this._connectedVersion === versions_1.Versions.V1_2) {\n                  _this._escapeHeaderValues = true;\n                }\n\n                _this._setupHeartbeat(frame.headers);\n\n                _this.onConnect(frame);\n              },\n              // [MESSAGE Frame](http://stomp.github.com/stomp-specification-1.2.html#MESSAGE)\n              MESSAGE: function (frame) {\n                // the callback is registered when the client calls\n                // `subscribe()`.\n                // If there is no registered subscription for the received message,\n                // the default `onUnhandledMessage` callback is used that the client can set.\n                // This is useful for subscriptions that are automatically created\n                // on the browser side (e.g. [RabbitMQ's temporary\n                // queues](http://www.rabbitmq.com/stomp.html)).\n                var subscription = frame.headers.subscription;\n                var onReceive = _this._subscriptions[subscription] || _this.onUnhandledMessage; // bless the frame to be a Message\n\n                var message = frame;\n                var client = _this;\n                var messageId = _this._connectedVersion === versions_1.Versions.V1_2 ? message.headers.ack : message.headers['message-id']; // add `ack()` and `nack()` methods directly to the returned frame\n                // so that a simple call to `message.ack()` can acknowledge the message.\n\n                message.ack = function (headers) {\n                  if (headers === void 0) {\n                    headers = {};\n                  }\n\n                  return client.ack(messageId, subscription, headers);\n                };\n\n                message.nack = function (headers) {\n                  if (headers === void 0) {\n                    headers = {};\n                  }\n\n                  return client.nack(messageId, subscription, headers);\n                };\n\n                onReceive(message);\n              },\n              // [RECEIPT Frame](http://stomp.github.com/stomp-specification-1.2.html#RECEIPT)\n              RECEIPT: function (frame) {\n                var callback = _this._receiptWatchers[frame.headers['receipt-id']];\n\n                if (callback) {\n                  callback(frame); // Server will acknowledge only once, remove the callback\n\n                  delete _this._receiptWatchers[frame.headers['receipt-id']];\n                } else {\n                  _this.onUnhandledReceipt(frame);\n                }\n              },\n              // [ERROR Frame](http://stomp.github.com/stomp-specification-1.2.html#ERROR)\n              ERROR: function (frame) {\n                _this.onStompError(frame);\n              }\n            }; // used to index subscribers\n\n            this._counter = 0; // subscription callbacks indexed by subscriber's ID\n\n            this._subscriptions = {}; // receipt-watchers indexed by receipts-ids\n\n            this._receiptWatchers = {};\n            this._partialData = '';\n            this._escapeHeaderValues = false;\n            this._lastServerActivityTS = Date.now();\n            this.configure(config);\n          }\n\n          Object.defineProperty(StompHandler.prototype, \"connectedVersion\", {\n            get: function () {\n              return this._connectedVersion;\n            },\n            enumerable: true,\n            configurable: true\n          });\n          Object.defineProperty(StompHandler.prototype, \"connected\", {\n            get: function () {\n              return this._connected;\n            },\n            enumerable: true,\n            configurable: true\n          });\n\n          StompHandler.prototype.configure = function (conf) {\n            // bulk assign all properties to this\n            Object.assign(this, conf);\n          };\n\n          StompHandler.prototype.start = function () {\n            var _this = this;\n\n            var parser = new parser_1.Parser( // On Frame\n            function (rawFrame) {\n              var frame = frame_impl_1.FrameImpl.fromRawFrame(rawFrame, _this._escapeHeaderValues); // if this.logRawCommunication is set, the rawChunk is logged at this._webSocket.onmessage\n\n              if (!_this.logRawCommunication) {\n                _this.debug(\"<<< \" + frame);\n              }\n\n              var serverFrameHandler = _this._serverFrameHandlers[frame.command] || _this.onUnhandledFrame;\n              serverFrameHandler(frame);\n            }, // On Incoming Ping\n            function () {\n              _this.debug('<<< PONG');\n            });\n\n            this._webSocket.onmessage = function (evt) {\n              _this.debug('Received data');\n\n              _this._lastServerActivityTS = Date.now();\n\n              if (_this.logRawCommunication) {\n                var rawChunkAsString = evt.data instanceof ArrayBuffer ? new TextDecoder().decode(evt.data) : evt.data;\n\n                _this.debug(\"<<< \" + rawChunkAsString);\n              }\n\n              parser.parseChunk(evt.data, _this.appendMissingNULLonIncoming);\n            };\n\n            this._webSocket.onclose = function (closeEvent) {\n              _this.debug(\"Connection closed to \" + _this._webSocket.url);\n\n              _this.onWebSocketClose(closeEvent);\n\n              _this._cleanUp();\n            };\n\n            this._webSocket.onerror = function (errorEvent) {\n              _this.onWebSocketError(errorEvent);\n            };\n\n            this._webSocket.onopen = function () {\n              // Clone before updating\n              var connectHeaders = Object.assign({}, _this.connectHeaders);\n\n              _this.debug('Web Socket Opened...');\n\n              connectHeaders['accept-version'] = _this.stompVersions.supportedVersions();\n              connectHeaders['heart-beat'] = [_this.heartbeatOutgoing, _this.heartbeatIncoming].join(',');\n\n              _this._transmit({\n                command: 'CONNECT',\n                headers: connectHeaders\n              });\n            };\n          };\n\n          StompHandler.prototype._setupHeartbeat = function (headers) {\n            var _this = this;\n\n            if (headers.version !== versions_1.Versions.V1_1 && headers.version !== versions_1.Versions.V1_2) {\n              return;\n            } // It is valid for the server to not send this header\n            // https://stomp.github.io/stomp-specification-1.2.html#Heart-beating\n\n\n            if (!headers['heart-beat']) {\n              return;\n            } // heart-beat header received from the server looks like:\n            //\n            //     heart-beat: sx, sy\n\n\n            var _a = headers['heart-beat'].split(',').map(function (v) {\n              return parseInt(v, 10);\n            }),\n                serverOutgoing = _a[0],\n                serverIncoming = _a[1];\n\n            if (this.heartbeatOutgoing !== 0 && serverIncoming !== 0) {\n              var ttl = Math.max(this.heartbeatOutgoing, serverIncoming);\n              this.debug(\"send PING every \" + ttl + \"ms\");\n              this._pinger = setInterval(function () {\n                if (_this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                  _this._webSocket.send(byte_1.BYTE.LF);\n\n                  _this.debug('>>> PING');\n                }\n              }, ttl);\n            }\n\n            if (this.heartbeatIncoming !== 0 && serverOutgoing !== 0) {\n              var ttl_1 = Math.max(this.heartbeatIncoming, serverOutgoing);\n              this.debug(\"check PONG every \" + ttl_1 + \"ms\");\n              this._ponger = setInterval(function () {\n                var delta = Date.now() - _this._lastServerActivityTS; // We wait twice the TTL to be flexible on window's setInterval calls\n\n\n                if (delta > ttl_1 * 2) {\n                  _this.debug(\"did not receive server activity for the last \" + delta + \"ms\");\n\n                  _this._closeWebsocket();\n                }\n              }, ttl_1);\n            }\n          };\n\n          StompHandler.prototype._closeWebsocket = function () {\n            this._webSocket.onmessage = function () {}; // ignore messages\n\n\n            this._webSocket.close();\n          };\n\n          StompHandler.prototype._transmit = function (params) {\n            var command = params.command,\n                headers = params.headers,\n                body = params.body,\n                binaryBody = params.binaryBody,\n                skipContentLengthHeader = params.skipContentLengthHeader;\n            var frame = new frame_impl_1.FrameImpl({\n              command: command,\n              headers: headers,\n              body: body,\n              binaryBody: binaryBody,\n              escapeHeaderValues: this._escapeHeaderValues,\n              skipContentLengthHeader: skipContentLengthHeader\n            });\n            var rawChunk = frame.serialize();\n\n            if (this.logRawCommunication) {\n              this.debug(\">>> \" + rawChunk);\n            } else {\n              this.debug(\">>> \" + frame);\n            }\n\n            if (this.forceBinaryWSFrames && typeof rawChunk === 'string') {\n              rawChunk = new TextEncoder().encode(rawChunk);\n            }\n\n            if (typeof rawChunk !== 'string' || !this.splitLargeFrames) {\n              this._webSocket.send(rawChunk);\n            } else {\n              var out = rawChunk;\n\n              while (out.length > 0) {\n                var chunk = out.substring(0, this.maxWebSocketChunkSize);\n                out = out.substring(this.maxWebSocketChunkSize);\n\n                this._webSocket.send(chunk);\n\n                this.debug(\"chunk sent = \" + chunk.length + \", remaining = \" + out.length);\n              }\n            }\n          };\n\n          StompHandler.prototype.dispose = function () {\n            var _this = this;\n\n            if (this.connected) {\n              try {\n                // clone before updating\n                var disconnectHeaders = Object.assign({}, this.disconnectHeaders);\n\n                if (!disconnectHeaders.receipt) {\n                  disconnectHeaders.receipt = \"close-\" + this._counter++;\n                }\n\n                this.watchForReceipt(disconnectHeaders.receipt, function (frame) {\n                  _this._closeWebsocket();\n\n                  _this._cleanUp();\n\n                  _this.onDisconnect(frame);\n                });\n\n                this._transmit({\n                  command: 'DISCONNECT',\n                  headers: disconnectHeaders\n                });\n              } catch (error) {\n                this.debug(\"Ignoring error during disconnect \" + error);\n              }\n            } else {\n              if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._closeWebsocket();\n              }\n            }\n          };\n\n          StompHandler.prototype._cleanUp = function () {\n            this._connected = false;\n\n            if (this._pinger) {\n              clearInterval(this._pinger);\n            }\n\n            if (this._ponger) {\n              clearInterval(this._ponger);\n            }\n          };\n\n          StompHandler.prototype.publish = function (params) {\n            var destination = params.destination,\n                headers = params.headers,\n                body = params.body,\n                binaryBody = params.binaryBody,\n                skipContentLengthHeader = params.skipContentLengthHeader;\n            var hdrs = Object.assign({\n              destination: destination\n            }, headers);\n\n            this._transmit({\n              command: 'SEND',\n              headers: hdrs,\n              body: body,\n              binaryBody: binaryBody,\n              skipContentLengthHeader: skipContentLengthHeader\n            });\n          };\n\n          StompHandler.prototype.watchForReceipt = function (receiptId, callback) {\n            this._receiptWatchers[receiptId] = callback;\n          };\n\n          StompHandler.prototype.subscribe = function (destination, callback, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n\n            headers = Object.assign({}, headers);\n\n            if (!headers.id) {\n              headers.id = \"sub-\" + this._counter++;\n            }\n\n            headers.destination = destination;\n            this._subscriptions[headers.id] = callback;\n\n            this._transmit({\n              command: 'SUBSCRIBE',\n              headers: headers\n            });\n\n            var client = this;\n            return {\n              id: headers.id,\n              unsubscribe: function (hdrs) {\n                return client.unsubscribe(headers.id, hdrs);\n              }\n            };\n          };\n\n          StompHandler.prototype.unsubscribe = function (id, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n\n            headers = Object.assign({}, headers);\n            delete this._subscriptions[id];\n            headers.id = id;\n\n            this._transmit({\n              command: 'UNSUBSCRIBE',\n              headers: headers\n            });\n          };\n\n          StompHandler.prototype.begin = function (transactionId) {\n            var txId = transactionId || \"tx-\" + this._counter++;\n\n            this._transmit({\n              command: 'BEGIN',\n              headers: {\n                transaction: txId\n              }\n            });\n\n            var client = this;\n            return {\n              id: txId,\n              commit: function () {\n                client.commit(txId);\n              },\n              abort: function () {\n                client.abort(txId);\n              }\n            };\n          };\n\n          StompHandler.prototype.commit = function (transactionId) {\n            this._transmit({\n              command: 'COMMIT',\n              headers: {\n                transaction: transactionId\n              }\n            });\n          };\n\n          StompHandler.prototype.abort = function (transactionId) {\n            this._transmit({\n              command: 'ABORT',\n              headers: {\n                transaction: transactionId\n              }\n            });\n          };\n\n          StompHandler.prototype.ack = function (messageId, subscriptionId, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n\n            headers = Object.assign({}, headers);\n\n            if (this._connectedVersion === versions_1.Versions.V1_2) {\n              headers.id = messageId;\n            } else {\n              headers['message-id'] = messageId;\n            }\n\n            headers.subscription = subscriptionId;\n\n            this._transmit({\n              command: 'ACK',\n              headers: headers\n            });\n          };\n\n          StompHandler.prototype.nack = function (messageId, subscriptionId, headers) {\n            if (headers === void 0) {\n              headers = {};\n            }\n\n            headers = Object.assign({}, headers);\n\n            if (this._connectedVersion === versions_1.Versions.V1_2) {\n              headers.id = messageId;\n            } else {\n              headers['message-id'] = messageId;\n            }\n\n            headers.subscription = subscriptionId;\n            return this._transmit({\n              command: 'NACK',\n              headers: headers\n            });\n          };\n\n          return StompHandler;\n        }();\n\n        exports.StompHandler = StompHandler;\n        /***/\n      },\n\n      /***/\n      \"./src/stomp-headers.ts\":\n      /*!******************************!*\\\n        !*** ./src/stomp-headers.ts ***!\n        \\******************************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * STOMP headers. Many functions calls will accept headers as parameters.\n         * The headers sent by Broker will be available as [IFrame#headers]{@link IFrame#headers}.\n         *\n         * `key` and `value` must be valid strings.\n         * In addition, `key` must not contain `CR`, `LF`, or `:`.\n         *\n         * Part of `@stomp/stompjs`.\n         */\n\n        var StompHeaders =\n        /** @class */\n        function () {\n          function StompHeaders() {}\n\n          return StompHeaders;\n        }();\n\n        exports.StompHeaders = StompHeaders;\n        /***/\n      },\n\n      /***/\n      \"./src/stomp-subscription.ts\":\n      /*!***********************************!*\\\n        !*** ./src/stomp-subscription.ts ***!\n        \\***********************************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n         *\n         * Part of `@stomp/stompjs`.\n         */\n\n        var StompSubscription =\n        /** @class */\n        function () {\n          function StompSubscription() {}\n\n          return StompSubscription;\n        }();\n\n        exports.StompSubscription = StompSubscription;\n        /***/\n      },\n\n      /***/\n      \"./src/versions.ts\":\n      /*!*************************!*\\\n        !*** ./src/versions.ts ***!\n        \\*************************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Supported STOMP versions\n         *\n         * Part of `@stomp/stompjs`.\n         */\n\n        var Versions =\n        /** @class */\n        function () {\n          /**\n           * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n           *\n           * You will an instance if this class if you want to override supported versions to be declared during\n           * STOMP handshake.\n           */\n          function Versions(versions) {\n            this.versions = versions;\n          }\n          /**\n           * Used as part of CONNECT STOMP Frame\n           */\n\n\n          Versions.prototype.supportedVersions = function () {\n            return this.versions.join(',');\n          };\n          /**\n           * Used while creating a WebSocket\n           */\n\n\n          Versions.prototype.protocolVersions = function () {\n            return this.versions.map(function (x) {\n              return \"v\" + x.replace('.', '') + \".stomp\";\n            });\n          };\n          /**\n           * Indicates protocol version 1.0\n           */\n\n\n          Versions.V1_0 = '1.0';\n          /**\n           * Indicates protocol version 1.1\n           */\n\n          Versions.V1_1 = '1.1';\n          /**\n           * Indicates protocol version 1.2\n           */\n\n          Versions.V1_2 = '1.2';\n          /**\n           * @internal\n           */\n\n          Versions.default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n          return Versions;\n        }();\n\n        exports.Versions = Versions;\n        /***/\n      },\n\n      /***/\n      \"./src/web-socket-state.ts\":\n      /*!*********************************!*\\\n        !*** ./src/web-socket-state.ts ***!\n        \\*********************************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        /**\n         * Possible states for the WebSocket, copied here to avoid dependency on WebSocket class\n         *\n         * Part of `@stomp/rx-stomp`\n         *\n         * @internal\n         */\n\n        var WebSocketState;\n\n        (function (WebSocketState) {\n          WebSocketState[WebSocketState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n          WebSocketState[WebSocketState[\"OPEN\"] = 1] = \"OPEN\";\n          WebSocketState[WebSocketState[\"CLOSING\"] = 2] = \"CLOSING\";\n          WebSocketState[WebSocketState[\"CLOSED\"] = 3] = \"CLOSED\";\n        })(WebSocketState = exports.WebSocketState || (exports.WebSocketState = {}));\n        /***/\n\n      },\n\n      /***/\n      0:\n      /*!****************************!*\\\n        !*** multi ./src/index.ts ***!\n        \\****************************/\n\n      /*! no static exports found */\n\n      /***/\n      function (module, exports, __webpack_require__) {\n        module.exports = __webpack_require__(\n        /*! /home/kdeepak/MyWork/Tech/stomp/stompjs/src/index.ts */\n        \"./src/index.ts\");\n        /***/\n      }\n      /******/\n\n    })\n  );\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","BYTE","LF","NULL","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","trys","ops","f","y","g","verb","iterator","v","op","TypeError","pop","length","push","stomp_handler_1","versions_1","web_socket_state_1","Client","conf","stompVersions","Versions","default","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","splitLargeFrames","maxWebSocketChunkSize","forceBinaryWSFrames","appendMissingNULLonIncoming","_active","noOp","debug","beforeConnect","onConnect","onDisconnect","onUnhandledMessage","onUnhandledReceipt","onUnhandledFrame","onStompError","onWebSocketClose","onWebSocketError","logRawCommunication","connectHeaders","_disconnectHeaders","configure","_webSocket","configurable","set","_stompHandler","disconnectHeaders","connected","connectedVersion","undefined","assign","activate","_connect","_this","_a","_createWebSocket","StompHandler","frame","_disposeStompHandler","evt","_schedule_reconnect","message","start","webSocket","webSocketFactory","WebSocket","brokerURL","protocolVersions","binaryType","_reconnector","setTimeout","deactivate","clearTimeout","forceDisconnect","readyState","WebSocketState","CONNECTING","OPEN","_closeWebsocket","dispose","publish","params","watchForReceipt","receiptId","callback","subscribe","destination","headers","unsubscribe","id","begin","transactionId","commit","abort","ack","messageId","subscriptionId","nack","__extends","extendStatics","b","setPrototypeOf","__proto__","Array","__","constructor","client_1","heartbeat_info_1","CompatClient","_super","maxWebSocketFrameSize","_heartbeatInfo","HeartbeatInfo","reconnect_delay","_i","arguments","console","log","_parseConnect","args","closeEventCallback","connectCallback","errorCallback","Error","login","passcode","host","connect","out","disconnect","disconnectCallback","send","skipContentLengthHeader","incoming","outgoing","client","compat_client_1","Stomp","url","protocols","wsFn","klass","WebSocketClass","over","ws","warn","byte_1","FrameImpl","command","binaryBody","escapeHeaderValues","_binaryBody","isBinaryBody","_body","TextDecoder","decode","TextEncoder","encode","fromRawFrame","rawFrame","trim","str","replace","reverse","header","idx","indexOf","hdrValueUnEscape","toString","serializeCmdAndHeaders","serialize","cmdAndHeaders","toUnit8Array","buffer","lines","keys","name_1","hdrValueEscape","isBodyEmpty","bodyLength","join","sizeOfUTF8","uint8CmdAndHeaders","nullTerminator","Uint8Array","uint8Frame","marshall","__export","CR","COLON","Parser","onFrame","onIncomingPing","_encoder","_decoder","_token","_initState","parseChunk","segment","chunk","ArrayBuffer","chunkWithNull","byte","_onByte","_collectFrame","_collectCommand","_reinjectByte","_results","_consumeTokenAsUTF8","_collectHeaders","_consumeByte","_setupCollectBody","_collectHeaderKey","_headerKey","_collectHeaderValue","contentLengthHeader","filter","_bodyBytesRemaining","parseInt","_collectBodyFixedSize","_collectBodyNullTerminated","_retrievedBody","_consumeTokenAsRaw","rawResult","StompConfig","frame_impl_1","parser_1","_client","config","_serverFrameHandlers","CONNECTED","server","_connected","_connectedVersion","version","V1_2","_escapeHeaderValues","_setupHeartbeat","MESSAGE","subscription","onReceive","_subscriptions","RECEIPT","_receiptWatchers","ERROR","_counter","_partialData","_lastServerActivityTS","Date","now","parser","serverFrameHandler","onmessage","rawChunkAsString","data","onclose","closeEvent","_cleanUp","onerror","errorEvent","onopen","supportedVersions","_transmit","V1_1","split","map","serverOutgoing","serverIncoming","ttl","Math","max","_pinger","setInterval","ttl_1","_ponger","delta","close","rawChunk","substring","receipt","error","clearInterval","hdrs","txId","transaction","StompHeaders","StompSubscription","versions","x","V1_0"],"sources":["D:/dev/bizvest/bizvest-ui/node_modules/@stomp/stompjs/bundles/stomp.umd.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"StompJs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StompJs\"] = factory();\n\telse\n\t\troot[\"StompJs\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/byte.ts\":\n/*!*********************!*\\\n  !*** ./src/byte.ts ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Some byte values, used as per STOMP specifications.\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexports.BYTE = {\n    // LINEFEED byte (octet 10)\n    LF: '\\x0A',\n    // NULL byte (octet 0)\n    NULL: '\\x00'\n};\n\n\n/***/ }),\n\n/***/ \"./src/client.ts\":\n/*!***********************!*\\\n  !*** ./src/client.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stomp_handler_1 = __webpack_require__(/*! ./stomp-handler */ \"./src/stomp-handler.ts\");\nvar versions_1 = __webpack_require__(/*! ./versions */ \"./src/versions.ts\");\nvar web_socket_state_1 = __webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\");\n/**\n * STOMP Client Class.\n *\n * Part of `@stomp/stompjs`.\n */\nvar Client = /** @class */ (function () {\n    /**\n     * Create an instance.\n     */\n    function Client(conf) {\n        if (conf === void 0) { conf = {}; }\n        /**\n         * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n         *\n         * Example:\n         * ```javascript\n         *        // Try only versions 1.0 and 1.1\n         *        client.stompVersions = new Versions(['1.0', '1.1'])\n         * ```\n         */\n        this.stompVersions = versions_1.Versions.default;\n        /**\n         *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n         */\n        this.reconnectDelay = 5000;\n        /**\n         * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n         */\n        this.heartbeatIncoming = 10000;\n        /**\n         * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n         */\n        this.heartbeatOutgoing = 10000;\n        /**\n         * This switches on a non standard behavior while sending WebSocket packets.\n         * It splits larger (text) packets into chunks of [maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n         * Only Java Spring brokers seems to use this mode.\n         *\n         * WebSockets, by itself, split large (text) packets,\n         * so it is not needed with a truly compliant STOMP/WebSocket broker.\n         * Actually setting it for such broker will cause large messages to fail.\n         *\n         * `false` by default.\n         *\n         * Binary frames are never split.\n         */\n        this.splitLargeFrames = false;\n        /**\n         * See [splitLargeFrames]{@link Client#splitLargeFrames}.\n         * This has no effect if [splitLargeFrames]{@link Client#splitLargeFrames} is `false`.\n         */\n        this.maxWebSocketChunkSize = 8 * 1024;\n        /**\n         * Usually the\n         * [type of WebSocket frame]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send#Parameters}\n         * is automatically decided by type of the payload.\n         * Default is `false`, which should work with all compliant brokers.\n         *\n         * Set this flag to force binary frames.\n         */\n        this.forceBinaryWSFrames = false;\n        /**\n         * A bug in ReactNative chops a string on occurrence of a NULL.\n         * See issue [https://github.com/stomp-js/stompjs/issues/89]{@link https://github.com/stomp-js/stompjs/issues/89}.\n         * This makes incoming WebSocket messages invalid STOMP packets.\n         * Setting this flag attempts to reverse the damage by appending a NULL.\n         * If the broker splits a large message into multiple WebSocket messages,\n         * this flag will cause data loss and abnormal termination of connection.\n         *\n         * This is not an ideal solution, but a stop gap until the underlying issue is fixed at ReactNative library.\n         */\n        this.appendMissingNULLonIncoming = false;\n        this._active = false;\n        // Dummy callbacks\n        var noOp = function () { };\n        this.debug = noOp;\n        this.beforeConnect = noOp;\n        this.onConnect = noOp;\n        this.onDisconnect = noOp;\n        this.onUnhandledMessage = noOp;\n        this.onUnhandledReceipt = noOp;\n        this.onUnhandledFrame = noOp;\n        this.onStompError = noOp;\n        this.onWebSocketClose = noOp;\n        this.onWebSocketError = noOp;\n        this.logRawCommunication = false;\n        // These parameters would typically get proper values before connect is called\n        this.connectHeaders = {};\n        this._disconnectHeaders = {};\n        // Apply configuration\n        this.configure(conf);\n    }\n    Object.defineProperty(Client.prototype, \"webSocket\", {\n        /**\n         * Underlying WebSocket instance, READONLY.\n         */\n        get: function () {\n            return this._webSocket;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"disconnectHeaders\", {\n        /**\n         * Disconnection headers.\n         */\n        get: function () {\n            return this._disconnectHeaders;\n        },\n        set: function (value) {\n            this._disconnectHeaders = value;\n            if (this._stompHandler) {\n                this._stompHandler.disconnectHeaders = this._disconnectHeaders;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"connected\", {\n        /**\n         * `true` if there is a active connection with STOMP Broker\n         */\n        get: function () {\n            return (!!this._stompHandler) && this._stompHandler.connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"connectedVersion\", {\n        /**\n         * version of STOMP protocol negotiated with the server, READONLY\n         */\n        get: function () {\n            return this._stompHandler ? this._stompHandler.connectedVersion : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Client.prototype, \"active\", {\n        /**\n         * if the client is active (connected or going to reconnect)\n         */\n        get: function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Update configuration.\n     */\n    Client.prototype.configure = function (conf) {\n        // bulk assign all properties to this\n        Object.assign(this, conf);\n    };\n    /**\n     * Initiate the connection with the broker.\n     * If the connection breaks, as per [Client#reconnectDelay]{@link Client#reconnectDelay},\n     * it will keep trying to reconnect.\n     *\n     * Call [Client#deactivate]{@link Client#deactivate} to disconnect and stop reconnection attempts.\n     */\n    Client.prototype.activate = function () {\n        this._active = true;\n        this._connect();\n    };\n    Client.prototype._connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.connected) {\n                            this.debug('STOMP: already connected, nothing to do');\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, this.beforeConnect()];\n                    case 1:\n                        _a.sent();\n                        if (!this._active) {\n                            this.debug('Client has been marked inactive, will not attempt to connect');\n                            return [2 /*return*/];\n                        }\n                        this.debug('Opening Web Socket...');\n                        // Get the actual WebSocket (or a similar object)\n                        this._webSocket = this._createWebSocket();\n                        this._stompHandler = new stomp_handler_1.StompHandler(this, this._webSocket, {\n                            debug: this.debug,\n                            stompVersions: this.stompVersions,\n                            connectHeaders: this.connectHeaders,\n                            disconnectHeaders: this._disconnectHeaders,\n                            heartbeatIncoming: this.heartbeatIncoming,\n                            heartbeatOutgoing: this.heartbeatOutgoing,\n                            splitLargeFrames: this.splitLargeFrames,\n                            maxWebSocketChunkSize: this.maxWebSocketChunkSize,\n                            forceBinaryWSFrames: this.forceBinaryWSFrames,\n                            logRawCommunication: this.logRawCommunication,\n                            appendMissingNULLonIncoming: this.appendMissingNULLonIncoming,\n                            onConnect: function (frame) {\n                                if (!_this._active) {\n                                    _this.debug('STOMP got connected while deactivate was issued, will disconnect now');\n                                    _this._disposeStompHandler();\n                                    return;\n                                }\n                                _this.onConnect(frame);\n                            },\n                            onDisconnect: function (frame) {\n                                _this.onDisconnect(frame);\n                            },\n                            onStompError: function (frame) {\n                                _this.onStompError(frame);\n                            },\n                            onWebSocketClose: function (evt) {\n                                _this.onWebSocketClose(evt);\n                                // The callback is called before attempting to reconnect, this would allow the client\n                                // to be `deactivated` in the callback.\n                                if (_this._active) {\n                                    _this._schedule_reconnect();\n                                }\n                            },\n                            onWebSocketError: function (evt) {\n                                _this.onWebSocketError(evt);\n                            },\n                            onUnhandledMessage: function (message) {\n                                _this.onUnhandledMessage(message);\n                            },\n                            onUnhandledReceipt: function (frame) {\n                                _this.onUnhandledReceipt(frame);\n                            },\n                            onUnhandledFrame: function (frame) {\n                                _this.onUnhandledFrame(frame);\n                            }\n                        });\n                        this._stompHandler.start();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Client.prototype._createWebSocket = function () {\n        var webSocket;\n        if (this.webSocketFactory) {\n            webSocket = this.webSocketFactory();\n        }\n        else {\n            webSocket = new WebSocket(this.brokerURL, this.stompVersions.protocolVersions());\n        }\n        webSocket.binaryType = 'arraybuffer';\n        return webSocket;\n    };\n    Client.prototype._schedule_reconnect = function () {\n        var _this = this;\n        if (this.reconnectDelay > 0) {\n            this.debug(\"STOMP: scheduling reconnection in \" + this.reconnectDelay + \"ms\");\n            this._reconnector = setTimeout(function () {\n                _this._connect();\n            }, this.reconnectDelay);\n        }\n    };\n    /**\n     * Disconnect if connected and stop auto reconnect loop.\n     * Appropriate callbacks will be invoked if underlying STOMP connection was connected.\n     *\n     * To reactivate you can call [Client#activate]{@link Client#activate}.\n     */\n    Client.prototype.deactivate = function () {\n        // indicate that auto reconnect loop should terminate\n        this._active = false;\n        // Clear if a reconnection was scheduled\n        if (this._reconnector) {\n            clearTimeout(this._reconnector);\n        }\n        this._disposeStompHandler();\n    };\n    /**\n     * Force disconnect if there is an active connection by directly closing the underlying WebSocket.\n     * This is different than a normal disconnect where a DISCONNECT sequence is carried out with the broker.\n     * After forcing disconnect, automatic reconnect will be attempted.\n     * To stop further reconnects call [Client#deactivate]{@link Client#deactivate} as well.\n     */\n    Client.prototype.forceDisconnect = function () {\n        if (this._webSocket) {\n            if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING\n                || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._stompHandler._closeWebsocket();\n            }\n        }\n    };\n    Client.prototype._disposeStompHandler = function () {\n        // Dispose STOMP Handler\n        if (this._stompHandler) {\n            this._stompHandler.dispose();\n            this._stompHandler = null;\n        }\n    };\n    /**\n     * Send a message to a named destination. Refer to your STOMP broker documentation for types\n     * and naming of destinations.\n     *\n     * STOMP protocol specifies and suggests some headers and also allows broker specific headers.\n     *\n     * `body` must be String.\n     * You will need to covert the payload to string in case it is not string (e.g. JSON).\n     *\n     * To send a binary message body use binaryBody parameter. It should be a\n     * [Uint8Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array).\n     * Sometimes brokers may not support binary frames out of the box.\n     * Please check your broker documentation.\n     *\n     * `content-length` header is automatically added to the STOMP Frame sent to the broker.\n     * Set `skipContentLengthHeader` to indicate that `content-length` header should not be added.\n     * For binary messages `content-length` header is always added.\n     *\n     * Caution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\n     * and `content-length` header is missing.\n     *\n     * ```javascript\n     *        client.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n     *\n     *        // Only destination is mandatory parameter\n     *        client.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n     *\n     *        // Skip content-length header in the frame to the broker\n     *        client.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n     *\n     *        var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n     *        // setting content-type header is not mandatory, however a good practice\n     *        client.publish({destination: '/topic/special', binaryBody: binaryData,\n     *                         headers: {'content-type': 'application/octet-stream'}});\n     * ```\n     */\n    Client.prototype.publish = function (params) {\n        this._stompHandler.publish(params);\n    };\n    /**\n     * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n     * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n     * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n     * random number or a combination may be used.\n     *\n     * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n     * The operation needs to be matched based in the value of the receipt-id.\n     *\n     * This method allow watching for a receipt and invoke the callback\n     * when corresponding receipt has been received.\n     *\n     * The actual {@link FrameImpl} will be passed as parameter to the callback.\n     *\n     * Example:\n     * ```javascript\n     *        // Subscribing with acknowledgement\n     *        let receiptId = randomText();\n     *\n     *        client.watchForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *\n     *        client.subscribe(TEST.destination, onMessage, {receipt: receiptId});\n     *\n     *\n     *        // Publishing with acknowledgement\n     *        receiptId = randomText();\n     *\n     *        client.watchForReceipt(receiptId, function() {\n     *          // Will be called after server acknowledges\n     *        });\n     *        client.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n     * ```\n     */\n    Client.prototype.watchForReceipt = function (receiptId, callback) {\n        this._stompHandler.watchForReceipt(receiptId, callback);\n    };\n    /**\n     * Subscribe to a STOMP Broker location. The callback will be invoked for each received message with\n     * the {@link IMessage} as argument.\n     *\n     * Note: The library will generate an unique ID if there is none provided in the headers.\n     *       To use your own ID, pass it using the headers argument.\n     *\n     * ```javascript\n     *        callback = function(message) {\n     *        // called when the client receives a STOMP message from the server\n     *          if (message.body) {\n     *            alert(\"got message with body \" + message.body)\n     *          } else {\n     *            alert(\"got empty message\");\n     *          }\n     *        });\n     *\n     *        var subscription = client.subscribe(\"/queue/test\", callback);\n     *\n     *        // Explicit subscription id\n     *        var mySubId = 'my-subscription-id-001';\n     *        var subscription = client.subscribe(destination, callback, { id: mySubId });\n     * ```\n     */\n    Client.prototype.subscribe = function (destination, callback, headers) {\n        if (headers === void 0) { headers = {}; }\n        return this._stompHandler.subscribe(destination, callback, headers);\n    };\n    /**\n     * It is preferable to unsubscribe from a subscription by calling\n     * `unsubscribe()` directly on {@link StompSubscription} returned by `client.subscribe()`:\n     *\n     * ```javascript\n     *        var subscription = client.subscribe(destination, onmessage);\n     *        // ...\n     *        subscription.unsubscribe();\n     * ```\n     *\n     * See: http://stomp.github.com/stomp-specification-1.2.html#UNSUBSCRIBE UNSUBSCRIBE Frame\n     */\n    Client.prototype.unsubscribe = function (id, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.unsubscribe(id, headers);\n    };\n    /**\n     * Start a transaction, the returned {@link ITransaction} has methods - [commit]{@link ITransaction#commit}\n     * and [abort]{@link ITransaction#abort}.\n     *\n     * `transactionId` is optional, if not passed the library will generate it internally.\n     */\n    Client.prototype.begin = function (transactionId) {\n        return this._stompHandler.begin(transactionId);\n    };\n    /**\n     * Commit a transaction.\n     *\n     * It is preferable to commit a transaction by calling [commit]{@link ITransaction#commit} directly on\n     * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n     *\n     * ```javascript\n     *        var tx = client.begin(txId);\n     *        //...\n     *        tx.commit();\n     * ```\n     */\n    Client.prototype.commit = function (transactionId) {\n        this._stompHandler.commit(transactionId);\n    };\n    /**\n     * Abort a transaction.\n     * It is preferable to abort a transaction by calling [abort]{@link ITransaction#abort} directly on\n     * {@link ITransaction} returned by [client.begin]{@link Client#begin}.\n     *\n     * ```javascript\n     *        var tx = client.begin(txId);\n     *        //...\n     *        tx.abort();\n     * ```\n     */\n    Client.prototype.abort = function (transactionId) {\n        this._stompHandler.abort(transactionId);\n    };\n    /**\n     * ACK a message. It is preferable to acknowledge a message by calling [ack]{@link IMessage#ack} directly\n     * on the {@link IMessage} handled by a subscription callback:\n     *\n     * ```javascript\n     *        var callback = function (message) {\n     *          // process the message\n     *          // acknowledge it\n     *          message.ack();\n     *        };\n     *        client.subscribe(destination, callback, {'ack': 'client'});\n     * ```\n     */\n    Client.prototype.ack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.ack(messageId, subscriptionId, headers);\n    };\n    /**\n     * NACK a message. It is preferable to acknowledge a message by calling [nack]{@link IMessage#nack} directly\n     * on the {@link IMessage} handled by a subscription callback:\n     *\n     * ```javascript\n     *        var callback = function (message) {\n     *          // process the message\n     *          // an error occurs, nack it\n     *          message.nack();\n     *        };\n     *        client.subscribe(destination, callback, {'ack': 'client'});\n     * ```\n     */\n    Client.prototype.nack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        this._stompHandler.nack(messageId, subscriptionId, headers);\n    };\n    return Client;\n}());\nexports.Client = Client;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/compat-client.ts\":\n/*!********************************************!*\\\n  !*** ./src/compatibility/compat-client.ts ***!\n  \\********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_1 = __webpack_require__(/*! ../client */ \"./src/client.ts\");\nvar heartbeat_info_1 = __webpack_require__(/*! ./heartbeat-info */ \"./src/compatibility/heartbeat-info.ts\");\n/**\n * Available for backward compatibility, please shift to using {@link Client}.\n *\n * **Deprecated**\n *\n * Part of `@stomp/stompjs`.\n *\n * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n */\nvar CompatClient = /** @class */ (function (_super) {\n    __extends(CompatClient, _super);\n    /**\n     * Available for backward compatibility, please shift to using {@link Client}\n     * and [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     *\n     * **Deprecated**\n     *\n     * @internal\n     */\n    function CompatClient(webSocketFactory) {\n        var _this = _super.call(this) || this;\n        /**\n         * It is no op now. No longer needed. Large packets work out of the box.\n         */\n        _this.maxWebSocketFrameSize = 16 * 1024;\n        _this._heartbeatInfo = new heartbeat_info_1.HeartbeatInfo(_this);\n        _this.reconnect_delay = 0;\n        _this.webSocketFactory = webSocketFactory;\n        // Default from previous version\n        _this.debug = function () {\n            var message = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                message[_i] = arguments[_i];\n            }\n            console.log.apply(console, message);\n        };\n        return _this;\n    }\n    CompatClient.prototype._parseConnect = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var closeEventCallback;\n        var connectCallback;\n        var errorCallback;\n        var headers = {};\n        if (args.length < 2) {\n            throw new Error(('Connect requires at least 2 arguments'));\n        }\n        if (typeof (args[1]) === 'function') {\n            headers = args[0], connectCallback = args[1], errorCallback = args[2], closeEventCallback = args[3];\n        }\n        else {\n            switch (args.length) {\n                case 6:\n                    headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4], headers.host = args[5];\n                    break;\n                default:\n                    headers.login = args[0], headers.passcode = args[1], connectCallback = args[2], errorCallback = args[3], closeEventCallback = args[4];\n            }\n        }\n        return [headers, connectCallback, errorCallback, closeEventCallback];\n    };\n    /**\n     * Available for backward compatibility, please shift to using [Client#activate]{@link Client#activate}.\n     *\n     * **Deprecated**\n     *\n     * The `connect` method accepts different number of arguments and types. See the Overloads list. Use the\n     * version with headers to pass your broker specific options.\n     *\n     * overloads:\n     * - connect(headers, connectCallback)\n     * - connect(headers, connectCallback, errorCallback)\n     * - connect(login, passcode, connectCallback)\n     * - connect(login, passcode, connectCallback, errorCallback)\n     * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback)\n     * - connect(login, passcode, connectCallback, errorCallback, closeEventCallback, host)\n     *\n     * params:\n     * - headers, see [Client#connectHeaders]{@link Client#connectHeaders}\n     * - connectCallback, see [Client#onConnect]{@link Client#onConnect}\n     * - errorCallback, see [Client#onStompError]{@link Client#onStompError}\n     * - closeEventCallback, see [Client#onWebSocketClose]{@link Client#onWebSocketClose}\n     * - login [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     * - passcode [String], [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     * - host [String], see [Client#connectHeaders](../classes/Client.html#connectHeaders)\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.connect = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var out = this._parseConnect.apply(this, args);\n        if (out[0]) {\n            this.connectHeaders = out[0];\n        }\n        if (out[1]) {\n            this.onConnect = out[1];\n        }\n        if (out[2]) {\n            this.onStompError = out[2];\n        }\n        if (out[3]) {\n            this.onWebSocketClose = out[3];\n        }\n        _super.prototype.activate.call(this);\n    };\n    /**\n     * Available for backward compatibility, please shift to using [Client#deactivate]{@link Client#deactivate}.\n     *\n     * **Deprecated**\n     *\n     * See:\n     * [Client#onDisconnect]{@link Client#onDisconnect}, and\n     * [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.disconnect = function (disconnectCallback, headers) {\n        if (headers === void 0) { headers = {}; }\n        if (disconnectCallback) {\n            this.onDisconnect = disconnectCallback;\n        }\n        this.disconnectHeaders = headers;\n        _super.prototype.deactivate.call(this);\n    };\n    /**\n     * Available for backward compatibility, use [Client#publish]{@link Client#publish}.\n     *\n     * Send a message to a named destination. Refer to your STOMP broker documentation for types\n     * and naming of destinations. The headers will, typically, be available to the subscriber.\n     * However, there may be special purpose headers corresponding to your STOMP broker.\n     *\n     *  **Deprecated**, use [Client#publish]{@link Client#publish}\n     *\n     * Note: Body must be String. You will need to covert the payload to string in case it is not string (e.g. JSON)\n     *\n     * ```javascript\n     *        client.send(\"/queue/test\", {priority: 9}, \"Hello, STOMP\");\n     *\n     *        // If you want to send a message with a body, you must also pass the headers argument.\n     *        client.send(\"/queue/test\", {}, \"Hello, STOMP\");\n     * ```\n     *\n     * To upgrade, please follow the [Upgrade Guide](../additional-documentation/upgrading.html)\n     */\n    CompatClient.prototype.send = function (destination, headers, body) {\n        if (headers === void 0) { headers = {}; }\n        if (body === void 0) { body = ''; }\n        headers = Object.assign({}, headers);\n        var skipContentLengthHeader = (headers['content-length'] === false);\n        if (skipContentLengthHeader) {\n            delete headers['content-length'];\n        }\n        this.publish({\n            destination: destination,\n            headers: headers,\n            body: body,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n    };\n    Object.defineProperty(CompatClient.prototype, \"reconnect_delay\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#reconnectDelay]{@link Client#reconnectDelay}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.reconnectDelay = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"ws\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#webSocket]{@link Client#webSocket}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this._webSocket;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"version\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#connectedVersion]{@link Client#connectedVersion}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.connectedVersion;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"onreceive\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.onUnhandledMessage;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.onUnhandledMessage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"onreceipt\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n         * Prefer using [Client#watchForReceipt]{@link Client#watchForReceipt}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this.onUnhandledReceipt;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.onUnhandledReceipt = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompatClient.prototype, \"heartbeat\", {\n        /**\n         * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n         * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n         *\n         * **Deprecated**\n         */\n        get: function () {\n            return this._heartbeatInfo;\n        },\n        /**\n         * Available for backward compatibility, renamed to [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n         * [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n         *\n         * **Deprecated**\n         */\n        set: function (value) {\n            this.heartbeatIncoming = value.incoming;\n            this.heartbeatOutgoing = value.outgoing;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CompatClient;\n}(client_1.Client));\nexports.CompatClient = CompatClient;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/heartbeat-info.ts\":\n/*!*********************************************!*\\\n  !*** ./src/compatibility/heartbeat-info.ts ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar HeartbeatInfo = /** @class */ (function () {\n    function HeartbeatInfo(client) {\n        this.client = client;\n    }\n    Object.defineProperty(HeartbeatInfo.prototype, \"outgoing\", {\n        get: function () {\n            return this.client.heartbeatOutgoing;\n        },\n        set: function (value) {\n            this.client.heartbeatOutgoing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HeartbeatInfo.prototype, \"incoming\", {\n        get: function () {\n            return this.client.heartbeatIncoming;\n        },\n        set: function (value) {\n            this.client.heartbeatIncoming = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HeartbeatInfo;\n}());\nexports.HeartbeatInfo = HeartbeatInfo;\n\n\n/***/ }),\n\n/***/ \"./src/compatibility/stomp.ts\":\n/*!************************************!*\\\n  !*** ./src/compatibility/stomp.ts ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar versions_1 = __webpack_require__(/*! ../versions */ \"./src/versions.ts\");\nvar compat_client_1 = __webpack_require__(/*! ./compat-client */ \"./src/compatibility/compat-client.ts\");\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nvar Stomp = /** @class */ (function () {\n    function Stomp() {\n    }\n    /**\n     * This method creates a WebSocket client that is connected to\n     * the STOMP server located at the url.\n     *\n     * ```javascript\n     *        var url = \"ws://localhost:61614/stomp\";\n     *        var client = Stomp.client(url);\n     * ```\n     *\n     * **Deprecated**\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#brokerURL]{@link Client#brokerURL}.\n     */\n    Stomp.client = function (url, protocols) {\n        // This is a hack to allow another implementation than the standard\n        // HTML5 WebSocket class.\n        //\n        // It is possible to use another class by calling\n        //\n        //     Stomp.WebSocketClass = MozWebSocket\n        //\n        // *prior* to call `Stomp.client()`.\n        //\n        // This hack is deprecated and `Stomp.over()` method should be used\n        // instead.\n        // See remarks on the function Stomp.over\n        if (protocols == null) {\n            protocols = versions_1.Versions.default.protocolVersions();\n        }\n        var wsFn = function () {\n            var klass = Stomp.WebSocketClass || WebSocket;\n            return new klass(url, protocols);\n        };\n        return new compat_client_1.CompatClient(wsFn);\n    };\n    /**\n     * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n     * specify the WebSocket to use (either a standard HTML5 WebSocket or\n     * a similar object).\n     *\n     * In order to support reconnection, the function Client._connect should be callable more than once.\n     * While reconnecting\n     * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n     * alternatively allows passing a function that should return a new instance of the underlying socket.\n     *\n     * ```javascript\n     *        var client = Stomp.over(function(){\n     *          return new WebSocket('ws://localhost:15674/ws')\n     *        });\n     * ```\n     *\n     * **Deprecated**\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     */\n    Stomp.over = function (ws) {\n        var wsFn;\n        if (typeof (ws) === 'function') {\n            wsFn = ws;\n        }\n        else {\n            console.warn('Stomp.over did not receive a factory, auto reconnect will not work. ' +\n                'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over');\n            wsFn = function () { return ws; };\n        }\n        return new compat_client_1.CompatClient(wsFn);\n    };\n    /**\n     * In case you need to use a non standard class for WebSocket.\n     *\n     * For example when using within NodeJS environment:\n     *\n     * ```javascript\n     *        StompJs = require('../../esm5/');\n     *        Stomp = StompJs.Stomp;\n     *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n     * ```\n     *\n     * **Deprecated**\n     *\n     *\n     * It will be removed in next major version. Please switch to {@link Client}\n     * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n     */\n    // tslint:disable-next-line:variable-name\n    Stomp.WebSocketClass = null;\n    return Stomp;\n}());\nexports.Stomp = Stomp;\n\n\n/***/ }),\n\n/***/ \"./src/frame-impl.ts\":\n/*!***************************!*\\\n  !*** ./src/frame-impl.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar byte_1 = __webpack_require__(/*! ./byte */ \"./src/byte.ts\");\n/**\n * Frame class represents a STOMP frame.\n *\n * @internal\n */\nvar FrameImpl = /** @class */ (function () {\n    /**\n     * Frame constructor. `command`, `headers` and `body` are available as properties.\n     *\n     * @internal\n     */\n    function FrameImpl(params) {\n        var command = params.command, headers = params.headers, body = params.body, binaryBody = params.binaryBody, escapeHeaderValues = params.escapeHeaderValues, skipContentLengthHeader = params.skipContentLengthHeader;\n        this.command = command;\n        this.headers = Object.assign({}, headers || {});\n        if (binaryBody) {\n            this._binaryBody = binaryBody;\n            this.isBinaryBody = true;\n        }\n        else {\n            this._body = body || '';\n            this.isBinaryBody = false;\n        }\n        this.escapeHeaderValues = escapeHeaderValues || false;\n        this.skipContentLengthHeader = skipContentLengthHeader || false;\n    }\n    Object.defineProperty(FrameImpl.prototype, \"body\", {\n        /**\n         * body of the frame\n         */\n        get: function () {\n            if (!this._body && this.isBinaryBody) {\n                this._body = new TextDecoder().decode(this._binaryBody);\n            }\n            return this._body;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FrameImpl.prototype, \"binaryBody\", {\n        /**\n         * body as Uint8Array\n         */\n        get: function () {\n            if (!this._binaryBody && !this.isBinaryBody) {\n                this._binaryBody = new TextEncoder().encode(this._body);\n            }\n            return this._binaryBody;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * deserialize a STOMP Frame from raw data.\n     *\n     * @internal\n     */\n    FrameImpl.fromRawFrame = function (rawFrame, escapeHeaderValues) {\n        var headers = {};\n        var trim = function (str) { return str.replace(/^\\s+|\\s+$/g, ''); };\n        // In case of repeated headers, as per standards, first value need to be used\n        for (var _i = 0, _a = rawFrame.headers.reverse(); _i < _a.length; _i++) {\n            var header = _a[_i];\n            var idx = header.indexOf(':');\n            var key = trim(header[0]);\n            var value = trim(header[1]);\n            if (escapeHeaderValues && (rawFrame.command !== 'CONNECT') && (rawFrame.command !== 'CONNECTED')) {\n                value = FrameImpl.hdrValueUnEscape(value);\n            }\n            headers[key] = value;\n        }\n        return new FrameImpl({\n            command: rawFrame.command,\n            headers: headers,\n            binaryBody: rawFrame.binaryBody,\n            escapeHeaderValues: escapeHeaderValues\n        });\n    };\n    /**\n     * @internal\n     */\n    FrameImpl.prototype.toString = function () {\n        return this.serializeCmdAndHeaders();\n    };\n    /**\n     * serialize this Frame in a format suitable to be passed to WebSocket.\n     * If the body is string the output will be string.\n     * If the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n     *\n     * @internal\n     */\n    FrameImpl.prototype.serialize = function () {\n        var cmdAndHeaders = this.serializeCmdAndHeaders();\n        if (this.isBinaryBody) {\n            return FrameImpl.toUnit8Array(cmdAndHeaders, this._binaryBody).buffer;\n        }\n        else {\n            return cmdAndHeaders + this._body + byte_1.BYTE.NULL;\n        }\n    };\n    FrameImpl.prototype.serializeCmdAndHeaders = function () {\n        var lines = [this.command];\n        if (this.skipContentLengthHeader) {\n            delete this.headers['content-length'];\n        }\n        for (var _i = 0, _a = Object.keys(this.headers || {}); _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            var value = this.headers[name_1];\n            if (this.escapeHeaderValues && (this.command !== 'CONNECT') && (this.command !== 'CONNECTED')) {\n                lines.push(name_1 + \":\" + FrameImpl.hdrValueEscape(\"\" + value));\n            }\n            else {\n                lines.push(name_1 + \":\" + value);\n            }\n        }\n        if (this.isBinaryBody || (!this.isBodyEmpty() && !this.skipContentLengthHeader)) {\n            lines.push(\"content-length:\" + this.bodyLength());\n        }\n        return lines.join(byte_1.BYTE.LF) + byte_1.BYTE.LF + byte_1.BYTE.LF;\n    };\n    FrameImpl.prototype.isBodyEmpty = function () {\n        return this.bodyLength() === 0;\n    };\n    FrameImpl.prototype.bodyLength = function () {\n        var binaryBody = this.binaryBody;\n        return binaryBody ? binaryBody.length : 0;\n    };\n    /**\n     * Compute the size of a UTF-8 string by counting its number of bytes\n     * (and not the number of characters composing the string)\n     */\n    FrameImpl.sizeOfUTF8 = function (s) {\n        return s ? new TextEncoder().encode(s).length : 0;\n    };\n    FrameImpl.toUnit8Array = function (cmdAndHeaders, binaryBody) {\n        var uint8CmdAndHeaders = new TextEncoder().encode(cmdAndHeaders);\n        var nullTerminator = new Uint8Array([0]);\n        var uint8Frame = new Uint8Array(uint8CmdAndHeaders.length + binaryBody.length + nullTerminator.length);\n        uint8Frame.set(uint8CmdAndHeaders);\n        uint8Frame.set(binaryBody, uint8CmdAndHeaders.length);\n        uint8Frame.set(nullTerminator, uint8CmdAndHeaders.length + binaryBody.length);\n        return uint8Frame;\n    };\n    /**\n     * Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n     *\n     * @internal\n     */\n    FrameImpl.marshall = function (params) {\n        var frame = new FrameImpl(params);\n        return frame.serialize();\n    };\n    /**\n     *  Escape header values\n     */\n    FrameImpl.hdrValueEscape = function (str) {\n        return str.replace(/\\\\/g, '\\\\\\\\').replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/:/g, '\\\\c');\n    };\n    /**\n     * UnEscape header values\n     */\n    FrameImpl.hdrValueUnEscape = function (str) {\n        return str.replace(/\\\\r/g, '\\r').replace(/\\\\n/g, '\\n').replace(/\\\\c/g, ':').replace(/\\\\\\\\/g, '\\\\');\n    };\n    return FrameImpl;\n}());\nexports.FrameImpl = FrameImpl;\n\n\n/***/ }),\n\n/***/ \"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./client */ \"./src/client.ts\"));\n__export(__webpack_require__(/*! ./frame-impl */ \"./src/frame-impl.ts\"));\n__export(__webpack_require__(/*! ./parser */ \"./src/parser.ts\"));\n__export(__webpack_require__(/*! ./stomp-config */ \"./src/stomp-config.ts\"));\n__export(__webpack_require__(/*! ./stomp-headers */ \"./src/stomp-headers.ts\"));\n__export(__webpack_require__(/*! ./stomp-subscription */ \"./src/stomp-subscription.ts\"));\n__export(__webpack_require__(/*! ./versions */ \"./src/versions.ts\"));\n__export(__webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\"));\n// Compatibility code\n__export(__webpack_require__(/*! ./compatibility/compat-client */ \"./src/compatibility/compat-client.ts\"));\n__export(__webpack_require__(/*! ./compatibility/stomp */ \"./src/compatibility/stomp.ts\"));\n\n\n/***/ }),\n\n/***/ \"./src/parser.ts\":\n/*!***********************!*\\\n  !*** ./src/parser.ts ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internal\n */\nvar NULL = 0;\n/**\n * @internal\n */\nvar LF = 10;\n/**\n * @internal\n */\nvar CR = 13;\n/**\n * @internal\n */\nvar COLON = 58;\n/**\n * This is an evented, rec descent parser.\n * A stream of Octets can be passed and whenever it recognizes\n * a complete Frame or an incoming ping it will invoke the registered callbacks.\n *\n * All incoming Octets are fed into _onByte function.\n * Depending on current state the _onByte function keeps changing.\n * Depending on the state it keeps accumulating into _token and _results.\n * State is indicated by current value of _onByte, all states are named as _collect.\n *\n * STOMP standards https://stomp.github.io/stomp-specification-1.2.html\n * imply that all lengths are considered in bytes (instead of string lengths).\n * So, before actual parsing, if the incoming data is String it is converted to Octets.\n * This allows faithful implementation of the protocol and allows NULL Octets to be present in the body.\n *\n * There is no peek function on the incoming data.\n * When a state change occurs based on an Octet without consuming the Octet,\n * the Octet, after state change, is fed again (_reinjectByte).\n * This became possible as the state change can be determined by inspecting just one Octet.\n *\n * There are two modes to collect the body, if content-length header is there then it by counting Octets\n * otherwise it is determined by NULL terminator.\n *\n * Following the standards, the command and headers are converted to Strings\n * and the body is returned as Octets.\n * Headers are returned as an array and not as Hash - to allow multiple occurrence of an header.\n *\n * This parser does not use Regular Expressions as that can only operate on Strings.\n *\n * It handles if multiple STOMP frames are given as one chunk, a frame is split into multiple chunks, or\n * any combination there of. The parser remembers its state (any partial frame) and continues when a new chunk\n * is pushed.\n *\n * Typically the higher level function will convert headers to Hash, handle unescaping of header values\n * (which is protocol version specific), and convert body to text.\n *\n * Check the parser.spec.js to understand cases that this parser is supposed to handle.\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar Parser = /** @class */ (function () {\n    function Parser(onFrame, onIncomingPing) {\n        this.onFrame = onFrame;\n        this.onIncomingPing = onIncomingPing;\n        this._encoder = new TextEncoder();\n        this._decoder = new TextDecoder();\n        this._token = [];\n        this._initState();\n    }\n    Parser.prototype.parseChunk = function (segment, appendMissingNULLonIncoming) {\n        if (appendMissingNULLonIncoming === void 0) { appendMissingNULLonIncoming = false; }\n        var chunk;\n        if ((segment instanceof ArrayBuffer)) {\n            chunk = new Uint8Array(segment);\n        }\n        else {\n            chunk = this._encoder.encode(segment);\n        }\n        // See https://github.com/stomp-js/stompjs/issues/89\n        // Remove when underlying issue is fixed.\n        //\n        // Send a NULL byte, if the last byte of a Text frame was not NULL.F\n        if (appendMissingNULLonIncoming && chunk[chunk.length - 1] !== 0) {\n            var chunkWithNull = new Uint8Array(chunk.length + 1);\n            chunkWithNull.set(chunk, 0);\n            chunkWithNull[chunk.length] = 0;\n            chunk = chunkWithNull;\n        }\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < chunk.length; i++) {\n            var byte = chunk[i];\n            this._onByte(byte);\n        }\n    };\n    // The following implements a simple Rec Descent Parser.\n    // The grammar is simple and just one byte tells what should be the next state\n    Parser.prototype._collectFrame = function (byte) {\n        if (byte === NULL) { // Ignore\n            return;\n        }\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) { // Incoming Ping\n            this.onIncomingPing();\n            return;\n        }\n        this._onByte = this._collectCommand;\n        this._reinjectByte(byte);\n    };\n    Parser.prototype._collectCommand = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._results.command = this._consumeTokenAsUTF8();\n            this._onByte = this._collectHeaders;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectHeaders = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._setupCollectBody();\n            return;\n        }\n        this._onByte = this._collectHeaderKey;\n        this._reinjectByte(byte);\n    };\n    Parser.prototype._reinjectByte = function (byte) {\n        this._onByte(byte);\n    };\n    Parser.prototype._collectHeaderKey = function (byte) {\n        if (byte === COLON) {\n            this._headerKey = this._consumeTokenAsUTF8();\n            this._onByte = this._collectHeaderValue;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectHeaderValue = function (byte) {\n        if (byte === CR) { // Ignore CR\n            return;\n        }\n        if (byte === LF) {\n            this._results.headers.push([this._headerKey, this._consumeTokenAsUTF8()]);\n            this._headerKey = undefined;\n            this._onByte = this._collectHeaders;\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._setupCollectBody = function () {\n        var contentLengthHeader = this._results.headers.filter(function (header) {\n            return header[0] === 'content-length';\n        })[0];\n        if (contentLengthHeader) {\n            this._bodyBytesRemaining = parseInt(contentLengthHeader[1], 10);\n            this._onByte = this._collectBodyFixedSize;\n        }\n        else {\n            this._onByte = this._collectBodyNullTerminated;\n        }\n    };\n    Parser.prototype._collectBodyNullTerminated = function (byte) {\n        if (byte === NULL) {\n            this._retrievedBody();\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._collectBodyFixedSize = function (byte) {\n        // It is post decrement, so that we discard the trailing NULL octet\n        if (this._bodyBytesRemaining-- === 0) {\n            this._retrievedBody();\n            return;\n        }\n        this._consumeByte(byte);\n    };\n    Parser.prototype._retrievedBody = function () {\n        this._results.binaryBody = this._consumeTokenAsRaw();\n        this.onFrame(this._results);\n        this._initState();\n    };\n    // Rec Descent Parser helpers\n    Parser.prototype._consumeByte = function (byte) {\n        this._token.push(byte);\n    };\n    Parser.prototype._consumeTokenAsUTF8 = function () {\n        return this._decoder.decode(this._consumeTokenAsRaw());\n    };\n    Parser.prototype._consumeTokenAsRaw = function () {\n        var rawResult = new Uint8Array(this._token);\n        this._token = [];\n        return rawResult;\n    };\n    Parser.prototype._initState = function () {\n        this._results = {\n            command: undefined,\n            headers: [],\n            binaryBody: undefined\n        };\n        this._token = [];\n        this._headerKey = undefined;\n        this._onByte = this._collectFrame;\n    };\n    return Parser;\n}());\nexports.Parser = Parser;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-config.ts\":\n/*!*****************************!*\\\n  !*** ./src/stomp-config.ts ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompConfig = /** @class */ (function () {\n    function StompConfig() {\n    }\n    return StompConfig;\n}());\nexports.StompConfig = StompConfig;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-handler.ts\":\n/*!******************************!*\\\n  !*** ./src/stomp-handler.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar byte_1 = __webpack_require__(/*! ./byte */ \"./src/byte.ts\");\nvar frame_impl_1 = __webpack_require__(/*! ./frame-impl */ \"./src/frame-impl.ts\");\nvar parser_1 = __webpack_require__(/*! ./parser */ \"./src/parser.ts\");\nvar versions_1 = __webpack_require__(/*! ./versions */ \"./src/versions.ts\");\nvar web_socket_state_1 = __webpack_require__(/*! ./web-socket-state */ \"./src/web-socket-state.ts\");\n/**\n * The STOMP protocol handler\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nvar StompHandler = /** @class */ (function () {\n    function StompHandler(_client, _webSocket, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        this._client = _client;\n        this._webSocket = _webSocket;\n        this._serverFrameHandlers = {\n            // [CONNECTED Frame](http://stomp.github.com/stomp-specification-1.2.html#CONNECTED_Frame)\n            CONNECTED: function (frame) {\n                _this.debug(\"connected to server \" + frame.headers.server);\n                _this._connected = true;\n                _this._connectedVersion = frame.headers.version;\n                // STOMP version 1.2 needs header values to be escaped\n                if (_this._connectedVersion === versions_1.Versions.V1_2) {\n                    _this._escapeHeaderValues = true;\n                }\n                _this._setupHeartbeat(frame.headers);\n                _this.onConnect(frame);\n            },\n            // [MESSAGE Frame](http://stomp.github.com/stomp-specification-1.2.html#MESSAGE)\n            MESSAGE: function (frame) {\n                // the callback is registered when the client calls\n                // `subscribe()`.\n                // If there is no registered subscription for the received message,\n                // the default `onUnhandledMessage` callback is used that the client can set.\n                // This is useful for subscriptions that are automatically created\n                // on the browser side (e.g. [RabbitMQ's temporary\n                // queues](http://www.rabbitmq.com/stomp.html)).\n                var subscription = frame.headers.subscription;\n                var onReceive = _this._subscriptions[subscription] || _this.onUnhandledMessage;\n                // bless the frame to be a Message\n                var message = frame;\n                var client = _this;\n                var messageId = _this._connectedVersion === versions_1.Versions.V1_2 ? message.headers.ack : message.headers['message-id'];\n                // add `ack()` and `nack()` methods directly to the returned frame\n                // so that a simple call to `message.ack()` can acknowledge the message.\n                message.ack = function (headers) {\n                    if (headers === void 0) { headers = {}; }\n                    return client.ack(messageId, subscription, headers);\n                };\n                message.nack = function (headers) {\n                    if (headers === void 0) { headers = {}; }\n                    return client.nack(messageId, subscription, headers);\n                };\n                onReceive(message);\n            },\n            // [RECEIPT Frame](http://stomp.github.com/stomp-specification-1.2.html#RECEIPT)\n            RECEIPT: function (frame) {\n                var callback = _this._receiptWatchers[frame.headers['receipt-id']];\n                if (callback) {\n                    callback(frame);\n                    // Server will acknowledge only once, remove the callback\n                    delete _this._receiptWatchers[frame.headers['receipt-id']];\n                }\n                else {\n                    _this.onUnhandledReceipt(frame);\n                }\n            },\n            // [ERROR Frame](http://stomp.github.com/stomp-specification-1.2.html#ERROR)\n            ERROR: function (frame) {\n                _this.onStompError(frame);\n            }\n        };\n        // used to index subscribers\n        this._counter = 0;\n        // subscription callbacks indexed by subscriber's ID\n        this._subscriptions = {};\n        // receipt-watchers indexed by receipts-ids\n        this._receiptWatchers = {};\n        this._partialData = '';\n        this._escapeHeaderValues = false;\n        this._lastServerActivityTS = Date.now();\n        this.configure(config);\n    }\n    Object.defineProperty(StompHandler.prototype, \"connectedVersion\", {\n        get: function () {\n            return this._connectedVersion;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StompHandler.prototype, \"connected\", {\n        get: function () {\n            return this._connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StompHandler.prototype.configure = function (conf) {\n        // bulk assign all properties to this\n        Object.assign(this, conf);\n    };\n    StompHandler.prototype.start = function () {\n        var _this = this;\n        var parser = new parser_1.Parser(\n        // On Frame\n        function (rawFrame) {\n            var frame = frame_impl_1.FrameImpl.fromRawFrame(rawFrame, _this._escapeHeaderValues);\n            // if this.logRawCommunication is set, the rawChunk is logged at this._webSocket.onmessage\n            if (!_this.logRawCommunication) {\n                _this.debug(\"<<< \" + frame);\n            }\n            var serverFrameHandler = _this._serverFrameHandlers[frame.command] || _this.onUnhandledFrame;\n            serverFrameHandler(frame);\n        }, \n        // On Incoming Ping\n        function () {\n            _this.debug('<<< PONG');\n        });\n        this._webSocket.onmessage = function (evt) {\n            _this.debug('Received data');\n            _this._lastServerActivityTS = Date.now();\n            if (_this.logRawCommunication) {\n                var rawChunkAsString = (evt.data instanceof ArrayBuffer) ? new TextDecoder().decode(evt.data) : evt.data;\n                _this.debug(\"<<< \" + rawChunkAsString);\n            }\n            parser.parseChunk(evt.data, _this.appendMissingNULLonIncoming);\n        };\n        this._webSocket.onclose = function (closeEvent) {\n            _this.debug(\"Connection closed to \" + _this._webSocket.url);\n            _this.onWebSocketClose(closeEvent);\n            _this._cleanUp();\n        };\n        this._webSocket.onerror = function (errorEvent) {\n            _this.onWebSocketError(errorEvent);\n        };\n        this._webSocket.onopen = function () {\n            // Clone before updating\n            var connectHeaders = Object.assign({}, _this.connectHeaders);\n            _this.debug('Web Socket Opened...');\n            connectHeaders['accept-version'] = _this.stompVersions.supportedVersions();\n            connectHeaders['heart-beat'] = [_this.heartbeatOutgoing, _this.heartbeatIncoming].join(',');\n            _this._transmit({ command: 'CONNECT', headers: connectHeaders });\n        };\n    };\n    StompHandler.prototype._setupHeartbeat = function (headers) {\n        var _this = this;\n        if ((headers.version !== versions_1.Versions.V1_1 && headers.version !== versions_1.Versions.V1_2)) {\n            return;\n        }\n        // It is valid for the server to not send this header\n        // https://stomp.github.io/stomp-specification-1.2.html#Heart-beating\n        if (!headers['heart-beat']) {\n            return;\n        }\n        // heart-beat header received from the server looks like:\n        //\n        //     heart-beat: sx, sy\n        var _a = (headers['heart-beat']).split(',').map(function (v) { return parseInt(v, 10); }), serverOutgoing = _a[0], serverIncoming = _a[1];\n        if ((this.heartbeatOutgoing !== 0) && (serverIncoming !== 0)) {\n            var ttl = Math.max(this.heartbeatOutgoing, serverIncoming);\n            this.debug(\"send PING every \" + ttl + \"ms\");\n            this._pinger = setInterval(function () {\n                if (_this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                    _this._webSocket.send(byte_1.BYTE.LF);\n                    _this.debug('>>> PING');\n                }\n            }, ttl);\n        }\n        if ((this.heartbeatIncoming !== 0) && (serverOutgoing !== 0)) {\n            var ttl_1 = Math.max(this.heartbeatIncoming, serverOutgoing);\n            this.debug(\"check PONG every \" + ttl_1 + \"ms\");\n            this._ponger = setInterval(function () {\n                var delta = Date.now() - _this._lastServerActivityTS;\n                // We wait twice the TTL to be flexible on window's setInterval calls\n                if (delta > (ttl_1 * 2)) {\n                    _this.debug(\"did not receive server activity for the last \" + delta + \"ms\");\n                    _this._closeWebsocket();\n                }\n            }, ttl_1);\n        }\n    };\n    StompHandler.prototype._closeWebsocket = function () {\n        this._webSocket.onmessage = function () { }; // ignore messages\n        this._webSocket.close();\n    };\n    StompHandler.prototype._transmit = function (params) {\n        var command = params.command, headers = params.headers, body = params.body, binaryBody = params.binaryBody, skipContentLengthHeader = params.skipContentLengthHeader;\n        var frame = new frame_impl_1.FrameImpl({\n            command: command,\n            headers: headers,\n            body: body,\n            binaryBody: binaryBody,\n            escapeHeaderValues: this._escapeHeaderValues,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n        var rawChunk = frame.serialize();\n        if (this.logRawCommunication) {\n            this.debug(\">>> \" + rawChunk);\n        }\n        else {\n            this.debug(\">>> \" + frame);\n        }\n        if (this.forceBinaryWSFrames && typeof rawChunk === 'string') {\n            rawChunk = new TextEncoder().encode(rawChunk);\n        }\n        if (typeof rawChunk !== 'string' || !this.splitLargeFrames) {\n            this._webSocket.send(rawChunk);\n        }\n        else {\n            var out = rawChunk;\n            while (out.length > 0) {\n                var chunk = out.substring(0, this.maxWebSocketChunkSize);\n                out = out.substring(this.maxWebSocketChunkSize);\n                this._webSocket.send(chunk);\n                this.debug(\"chunk sent = \" + chunk.length + \", remaining = \" + out.length);\n            }\n        }\n    };\n    StompHandler.prototype.dispose = function () {\n        var _this = this;\n        if (this.connected) {\n            try {\n                // clone before updating\n                var disconnectHeaders = Object.assign({}, this.disconnectHeaders);\n                if (!disconnectHeaders.receipt) {\n                    disconnectHeaders.receipt = \"close-\" + this._counter++;\n                }\n                this.watchForReceipt(disconnectHeaders.receipt, function (frame) {\n                    _this._closeWebsocket();\n                    _this._cleanUp();\n                    _this.onDisconnect(frame);\n                });\n                this._transmit({ command: 'DISCONNECT', headers: disconnectHeaders });\n            }\n            catch (error) {\n                this.debug(\"Ignoring error during disconnect \" + error);\n            }\n        }\n        else {\n            if (this._webSocket.readyState === web_socket_state_1.WebSocketState.CONNECTING\n                || this._webSocket.readyState === web_socket_state_1.WebSocketState.OPEN) {\n                this._closeWebsocket();\n            }\n        }\n    };\n    StompHandler.prototype._cleanUp = function () {\n        this._connected = false;\n        if (this._pinger) {\n            clearInterval(this._pinger);\n        }\n        if (this._ponger) {\n            clearInterval(this._ponger);\n        }\n    };\n    StompHandler.prototype.publish = function (params) {\n        var destination = params.destination, headers = params.headers, body = params.body, binaryBody = params.binaryBody, skipContentLengthHeader = params.skipContentLengthHeader;\n        var hdrs = Object.assign({ destination: destination }, headers);\n        this._transmit({\n            command: 'SEND',\n            headers: hdrs,\n            body: body,\n            binaryBody: binaryBody,\n            skipContentLengthHeader: skipContentLengthHeader\n        });\n    };\n    StompHandler.prototype.watchForReceipt = function (receiptId, callback) {\n        this._receiptWatchers[receiptId] = callback;\n    };\n    StompHandler.prototype.subscribe = function (destination, callback, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (!headers.id) {\n            headers.id = \"sub-\" + this._counter++;\n        }\n        headers.destination = destination;\n        this._subscriptions[headers.id] = callback;\n        this._transmit({ command: 'SUBSCRIBE', headers: headers });\n        var client = this;\n        return {\n            id: headers.id,\n            unsubscribe: function (hdrs) {\n                return client.unsubscribe(headers.id, hdrs);\n            }\n        };\n    };\n    StompHandler.prototype.unsubscribe = function (id, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        delete this._subscriptions[id];\n        headers.id = id;\n        this._transmit({ command: 'UNSUBSCRIBE', headers: headers });\n    };\n    StompHandler.prototype.begin = function (transactionId) {\n        var txId = transactionId || (\"tx-\" + this._counter++);\n        this._transmit({\n            command: 'BEGIN', headers: {\n                transaction: txId\n            }\n        });\n        var client = this;\n        return {\n            id: txId,\n            commit: function () {\n                client.commit(txId);\n            },\n            abort: function () {\n                client.abort(txId);\n            }\n        };\n    };\n    StompHandler.prototype.commit = function (transactionId) {\n        this._transmit({\n            command: 'COMMIT', headers: {\n                transaction: transactionId\n            }\n        });\n    };\n    StompHandler.prototype.abort = function (transactionId) {\n        this._transmit({\n            command: 'ABORT', headers: {\n                transaction: transactionId\n            }\n        });\n    };\n    StompHandler.prototype.ack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (this._connectedVersion === versions_1.Versions.V1_2) {\n            headers.id = messageId;\n        }\n        else {\n            headers['message-id'] = messageId;\n        }\n        headers.subscription = subscriptionId;\n        this._transmit({ command: 'ACK', headers: headers });\n    };\n    StompHandler.prototype.nack = function (messageId, subscriptionId, headers) {\n        if (headers === void 0) { headers = {}; }\n        headers = Object.assign({}, headers);\n        if (this._connectedVersion === versions_1.Versions.V1_2) {\n            headers.id = messageId;\n        }\n        else {\n            headers['message-id'] = messageId;\n        }\n        headers.subscription = subscriptionId;\n        return this._transmit({ command: 'NACK', headers: headers });\n    };\n    return StompHandler;\n}());\nexports.StompHandler = StompHandler;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-headers.ts\":\n/*!******************************!*\\\n  !*** ./src/stomp-headers.ts ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * STOMP headers. Many functions calls will accept headers as parameters.\n * The headers sent by Broker will be available as [IFrame#headers]{@link IFrame#headers}.\n *\n * `key` and `value` must be valid strings.\n * In addition, `key` must not contain `CR`, `LF`, or `:`.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompHeaders = /** @class */ (function () {\n    function StompHeaders() {\n    }\n    return StompHeaders;\n}());\nexports.StompHeaders = StompHeaders;\n\n\n/***/ }),\n\n/***/ \"./src/stomp-subscription.ts\":\n/*!***********************************!*\\\n  !*** ./src/stomp-subscription.ts ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nvar StompSubscription = /** @class */ (function () {\n    function StompSubscription() {\n    }\n    return StompSubscription;\n}());\nexports.StompSubscription = StompSubscription;\n\n\n/***/ }),\n\n/***/ \"./src/versions.ts\":\n/*!*************************!*\\\n  !*** ./src/versions.ts ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Supported STOMP versions\n *\n * Part of `@stomp/stompjs`.\n */\nvar Versions = /** @class */ (function () {\n    /**\n     * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n     *\n     * You will an instance if this class if you want to override supported versions to be declared during\n     * STOMP handshake.\n     */\n    function Versions(versions) {\n        this.versions = versions;\n    }\n    /**\n     * Used as part of CONNECT STOMP Frame\n     */\n    Versions.prototype.supportedVersions = function () {\n        return this.versions.join(',');\n    };\n    /**\n     * Used while creating a WebSocket\n     */\n    Versions.prototype.protocolVersions = function () {\n        return this.versions.map(function (x) { return \"v\" + x.replace('.', '') + \".stomp\"; });\n    };\n    /**\n     * Indicates protocol version 1.0\n     */\n    Versions.V1_0 = '1.0';\n    /**\n     * Indicates protocol version 1.1\n     */\n    Versions.V1_1 = '1.1';\n    /**\n     * Indicates protocol version 1.2\n     */\n    Versions.V1_2 = '1.2';\n    /**\n     * @internal\n     */\n    Versions.default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n    return Versions;\n}());\nexports.Versions = Versions;\n\n\n/***/ }),\n\n/***/ \"./src/web-socket-state.ts\":\n/*!*********************************!*\\\n  !*** ./src/web-socket-state.ts ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Possible states for the WebSocket, copied here to avoid dependency on WebSocket class\n *\n * Part of `@stomp/rx-stomp`\n *\n * @internal\n */\nvar WebSocketState;\n(function (WebSocketState) {\n    WebSocketState[WebSocketState[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    WebSocketState[WebSocketState[\"OPEN\"] = 1] = \"OPEN\";\n    WebSocketState[WebSocketState[\"CLOSING\"] = 2] = \"CLOSING\";\n    WebSocketState[WebSocketState[\"CLOSED\"] = 3] = \"CLOSED\";\n})(WebSocketState = exports.WebSocketState || (exports.WebSocketState = {}));\n\n\n/***/ }),\n\n/***/ 0:\n/*!****************************!*\\\n  !*** multi ./src/index.ts ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(/*! /home/kdeepak/MyWork/Tech/stomp/stompjs/src/index.ts */\"./src/index.ts\");\n\n\n/***/ })\n\n/******/ });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}