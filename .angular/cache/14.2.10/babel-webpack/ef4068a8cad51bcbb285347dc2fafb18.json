{"ast":null,"code":"import { InjectionToken, inject } from '@angular/core';\nimport { Observable, fromEvent } from 'rxjs';\nimport { share, startWith, map, distinctUntilChanged, shareReplay } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nconst WINDOW = new InjectionToken('An abstraction over global window object', {\n  factory: () => {\n    const {\n      defaultView\n    } = inject(DOCUMENT);\n\n    if (!defaultView) {\n      throw new Error('Window is not available');\n    }\n\n    return defaultView;\n  }\n});\nconst ANIMATION_FRAME = new InjectionToken('Shared Observable based on `window.requestAnimationFrame`', {\n  factory: () => {\n    const {\n      requestAnimationFrame,\n      cancelAnimationFrame\n    } = inject(WINDOW);\n    const animationFrame$ = new Observable(subscriber => {\n      let id = NaN;\n\n      const callback = timestamp => {\n        subscriber.next(timestamp);\n        id = requestAnimationFrame(callback);\n      };\n\n      id = requestAnimationFrame(callback);\n      return () => {\n        cancelAnimationFrame(id);\n      };\n    });\n    return animationFrame$.pipe(share());\n  }\n});\nconst CACHES = new InjectionToken('An abstraction over window.caches object', {\n  factory: () => inject(WINDOW).caches\n});\nconst CRYPTO = new InjectionToken('An abstraction over window.crypto object', {\n  factory: () => inject(WINDOW).crypto\n});\nconst CSS = new InjectionToken('An abstraction over window.CSS object', {\n  factory: () => inject(WINDOW).CSS || {\n    escape: v => v,\n    supports: () => false\n  }\n});\nconst HISTORY = new InjectionToken('An abstraction over window.history object', {\n  factory: () => inject(WINDOW).history\n});\nconst LOCAL_STORAGE = new InjectionToken('An abstraction over window.localStorage object', {\n  factory: () => inject(WINDOW).localStorage\n});\nconst LOCATION = new InjectionToken('An abstraction over window.location object', {\n  factory: () => inject(WINDOW).location\n});\nconst NAVIGATOR = new InjectionToken('An abstraction over window.navigator object', {\n  factory: () => inject(WINDOW).navigator\n});\nconst MEDIA_DEVICES = new InjectionToken('An abstraction over window.navigator.mediaDevices object', {\n  factory: () => inject(NAVIGATOR).mediaDevices\n});\nconst NETWORK_INFORMATION = new InjectionToken('An abstraction over window.navigator.connection object', {\n  // @ts-ignore\n  factory: () => inject(NAVIGATOR).connection || null\n});\nconst PAGE_VISIBILITY = new InjectionToken('Shared Observable based on `document visibility changed`', {\n  factory: () => {\n    const documentRef = inject(DOCUMENT);\n    return fromEvent(documentRef, 'visibilitychange').pipe(startWith(0), map(() => documentRef.visibilityState !== 'hidden'), distinctUntilChanged(), shareReplay({\n      refCount: false,\n      bufferSize: 1\n    }));\n  }\n});\nconst PERFORMANCE = new InjectionToken('An abstraction over window.performance object', {\n  factory: () => inject(WINDOW).performance\n});\nconst SCREEN = new InjectionToken('An abstraction over window.screen object', {\n  factory: () => inject(WINDOW).screen\n});\nconst SESSION_STORAGE = new InjectionToken('An abstraction over window.sessionStorage object', {\n  factory: () => inject(WINDOW).sessionStorage\n});\nconst SPEECH_RECOGNITION = new InjectionToken('An abstraction over SpeechRecognition class', {\n  factory: () => {\n    const windowRef = inject(WINDOW);\n    return windowRef.speechRecognition || windowRef.webkitSpeechRecognition || null;\n  }\n});\nconst SPEECH_SYNTHESIS = new InjectionToken('An abstraction over window.speechSynthesis object', {\n  factory: () => inject(WINDOW).speechSynthesis\n});\nconst USER_AGENT = new InjectionToken('An abstraction over window.navigator.userAgent object', {\n  factory: () => inject(NAVIGATOR).userAgent\n});\n/**\r\n * Public API Surface of @ng-web-apis/common\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ANIMATION_FRAME, CACHES, CRYPTO, CSS, HISTORY, LOCAL_STORAGE, LOCATION, MEDIA_DEVICES, NAVIGATOR, NETWORK_INFORMATION, PAGE_VISIBILITY, PERFORMANCE, SCREEN, SESSION_STORAGE, SPEECH_RECOGNITION, SPEECH_SYNTHESIS, USER_AGENT, WINDOW };","map":{"version":3,"names":["InjectionToken","inject","Observable","fromEvent","share","startWith","map","distinctUntilChanged","shareReplay","DOCUMENT","WINDOW","factory","defaultView","Error","ANIMATION_FRAME","requestAnimationFrame","cancelAnimationFrame","animationFrame$","subscriber","id","NaN","callback","timestamp","next","pipe","CACHES","caches","CRYPTO","crypto","CSS","escape","v","supports","HISTORY","history","LOCAL_STORAGE","localStorage","LOCATION","location","NAVIGATOR","navigator","MEDIA_DEVICES","mediaDevices","NETWORK_INFORMATION","connection","PAGE_VISIBILITY","documentRef","visibilityState","refCount","bufferSize","PERFORMANCE","performance","SCREEN","screen","SESSION_STORAGE","sessionStorage","SPEECH_RECOGNITION","windowRef","speechRecognition","webkitSpeechRecognition","SPEECH_SYNTHESIS","speechSynthesis","USER_AGENT","userAgent"],"sources":["D:/dev/bizvest/bizvest-ui/node_modules/@ng-web-apis/common/fesm2015/ng-web-apis-common.js"],"sourcesContent":["import { InjectionToken, inject } from '@angular/core';\nimport { Observable, fromEvent } from 'rxjs';\nimport { share, startWith, map, distinctUntilChanged, shareReplay } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\nconst WINDOW = new InjectionToken('An abstraction over global window object', {\r\n    factory: () => {\r\n        const { defaultView } = inject(DOCUMENT);\r\n        if (!defaultView) {\r\n            throw new Error('Window is not available');\r\n        }\r\n        return defaultView;\r\n    },\r\n});\n\nconst ANIMATION_FRAME = new InjectionToken('Shared Observable based on `window.requestAnimationFrame`', {\r\n    factory: () => {\r\n        const { requestAnimationFrame, cancelAnimationFrame } = inject(WINDOW);\r\n        const animationFrame$ = new Observable(subscriber => {\r\n            let id = NaN;\r\n            const callback = (timestamp) => {\r\n                subscriber.next(timestamp);\r\n                id = requestAnimationFrame(callback);\r\n            };\r\n            id = requestAnimationFrame(callback);\r\n            return () => {\r\n                cancelAnimationFrame(id);\r\n            };\r\n        });\r\n        return animationFrame$.pipe(share());\r\n    },\r\n});\n\nconst CACHES = new InjectionToken('An abstraction over window.caches object', {\r\n    factory: () => inject(WINDOW).caches,\r\n});\n\nconst CRYPTO = new InjectionToken('An abstraction over window.crypto object', {\r\n    factory: () => inject(WINDOW).crypto,\r\n});\n\nconst CSS = new InjectionToken('An abstraction over window.CSS object', {\r\n    factory: () => inject(WINDOW).CSS || {\r\n        escape: v => v,\r\n        supports: () => false,\r\n    },\r\n});\n\nconst HISTORY = new InjectionToken('An abstraction over window.history object', {\r\n    factory: () => inject(WINDOW).history,\r\n});\n\nconst LOCAL_STORAGE = new InjectionToken('An abstraction over window.localStorage object', {\r\n    factory: () => inject(WINDOW).localStorage,\r\n});\n\nconst LOCATION = new InjectionToken('An abstraction over window.location object', {\r\n    factory: () => inject(WINDOW).location,\r\n});\n\nconst NAVIGATOR = new InjectionToken('An abstraction over window.navigator object', {\r\n    factory: () => inject(WINDOW).navigator,\r\n});\n\nconst MEDIA_DEVICES = new InjectionToken('An abstraction over window.navigator.mediaDevices object', {\r\n    factory: () => inject(NAVIGATOR).mediaDevices,\r\n});\n\nconst NETWORK_INFORMATION = new InjectionToken('An abstraction over window.navigator.connection object', {\r\n    // @ts-ignore\r\n    factory: () => inject(NAVIGATOR).connection || null,\r\n});\n\nconst PAGE_VISIBILITY = new InjectionToken('Shared Observable based on `document visibility changed`', {\r\n    factory: () => {\r\n        const documentRef = inject(DOCUMENT);\r\n        return fromEvent(documentRef, 'visibilitychange').pipe(startWith(0), map(() => documentRef.visibilityState !== 'hidden'), distinctUntilChanged(), shareReplay({ refCount: false, bufferSize: 1 }));\r\n    },\r\n});\n\nconst PERFORMANCE = new InjectionToken('An abstraction over window.performance object', {\r\n    factory: () => inject(WINDOW).performance,\r\n});\n\nconst SCREEN = new InjectionToken('An abstraction over window.screen object', {\r\n    factory: () => inject(WINDOW).screen,\r\n});\n\nconst SESSION_STORAGE = new InjectionToken('An abstraction over window.sessionStorage object', {\r\n    factory: () => inject(WINDOW).sessionStorage,\r\n});\n\nconst SPEECH_RECOGNITION = new InjectionToken('An abstraction over SpeechRecognition class', {\r\n    factory: () => {\r\n        const windowRef = inject(WINDOW);\r\n        return windowRef.speechRecognition || windowRef.webkitSpeechRecognition || null;\r\n    },\r\n});\n\nconst SPEECH_SYNTHESIS = new InjectionToken('An abstraction over window.speechSynthesis object', {\r\n    factory: () => inject(WINDOW).speechSynthesis,\r\n});\n\nconst USER_AGENT = new InjectionToken('An abstraction over window.navigator.userAgent object', {\r\n    factory: () => inject(NAVIGATOR).userAgent,\r\n});\n\n/**\r\n * Public API Surface of @ng-web-apis/common\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ANIMATION_FRAME, CACHES, CRYPTO, CSS, HISTORY, LOCAL_STORAGE, LOCATION, MEDIA_DEVICES, NAVIGATOR, NETWORK_INFORMATION, PAGE_VISIBILITY, PERFORMANCE, SCREEN, SESSION_STORAGE, SPEECH_RECOGNITION, SPEECH_SYNTHESIS, USER_AGENT, WINDOW };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}